
AVRASM ver. 2.1.30  C:\ChipAVR\PracticaReloj\Debug\List\PracticaReloj.asm Mon May 20 20:02:34 2024

                 
                 
                 ;CodeVisionAVR C Compiler V4.02 
                 ;(C) Copyright 1998-2024 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega328P
                 ;Program type           : Application
                 ;Clock frequency        : 1.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: Off
                 ;Smart register allocation: Off
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega328P
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU SPMCSR=0x37
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x08FF
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.EQU __FLASH_PAGE_SIZE=0x40
                 	.EQU __EEPROM_PAGE_SIZE=0x04
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 004c 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
000034 2710
000035 03e8
000036 0064
000037 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000038 0001      	.DB  0x1,0x0
                 _tbl16_G100:
000039 1000
00003a 0100
00003b 0010
00003c 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x3:
00003d 0303
00003e 0203
00003f 0c02
000040 0800      	.DB  0x3,0x3,0x3,0x2,0x2,0xC,0x0,0x8
000041 0100
000042 0600      	.DB  0x0,0x1,0x0,0x6
                 _0x0:
000043 3025
000044 6932
000045 253a
000046 3230      	.DB  0x25,0x30,0x32,0x69,0x3A,0x25,0x30,0x32
000047 3a69
000048 3025
000049 6932
00004a 2020      	.DB  0x69,0x3A,0x25,0x30,0x32,0x69,0x20,0x20
C:\ChipAVR\PracticaReloj\Debug\List\PracticaReloj.asm(1469): warning: .cseg .db misalignment - padding zero byte
00004b 0000      	.DB  0x0
                 __RESET:
00004c 94f8      	CLI
                 
00004d 27ee      	CLR  R30
00004e bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00004f e0f1      	LDI  R31,1
000050 bff5      	OUT  MCUCR,R31
000051 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000052 e08d      	LDI  R24,(14-2)+1
000053 e0a2      	LDI  R26,2
000054 27bb      	CLR  R27
                 __CLEAR_REG:
000055 93ed      	ST   X+,R30
000056 958a      	DEC  R24
000057 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000058 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000059 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00005a e0a0      	LDI  R26,LOW(__SRAM_START)
00005b e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
00005c 93ed      	ST   X+,R30
00005d 9701      	SBIW R24,1
00005e f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GPIOR0 INITIALIZATION
00005f e0e0      	LDI  R30,__GPIOR0_INIT
000060 bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000061 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000062 bfed      	OUT  SPL,R30
000063 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000064 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000065 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000066 e0d3      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000067 940c 0108 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x300
                 
                 	.CSEG
                     .equ __lcd_port=0x0B   //LCD en PuertoD
                     .equ __lcd_EN=3
                     .equ __lcd_RS=2
                     .equ __lcd_D4=4
                     .equ __lcd_D5=5
                     .equ __lcd_D6=6
                     .equ __lcd_D7=7
                 ; 0000 0010    #endasm
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 
                 	.CSEG
                 _SetupLCD:
                 ; .FSTART _SetupLCD
000069 972c      	SBIW R28,12
00006a e08c      	LDI  R24,12
                +
00006b e060     +LDI R22 , LOW ( 0 )
00006c e070     +LDI R23 , HIGH ( 0 )
                 	__GETWRN 22,23,0
00006d e7ea      	LDI  R30,LOW(_0x3*2)
00006e e0f0      	LDI  R31,HIGH(_0x3*2)
00006f d345      	RCALL __INITLOCB
000070 930a      	ST   -Y,R16
                 ;	TableSetup -> Y+1
                 ;	i -> R16
                 ; 0000 0015     SBI __lcd_port-1,__lcd_EN
000071 9a53          SBI __lcd_port-1,__lcd_EN
000072 9a52          SBI __lcd_port-1,__lcd_RS
000073 9a54          SBI __lcd_port-1,__lcd_D4
000074 9a55          SBI __lcd_port-1,__lcd_D5
000075 9a56          SBI __lcd_port-1,__lcd_D6
000076 9a57          SBI __lcd_port-1,__lcd_D7
000077 e3a2      	LDI  R26,LOW(50)
000078 e0b0      	LDI  R27,0
000079 d4c2      	RCALL _delay_ms
00007a e000      	LDI  R16,LOW(0)
                 _0x5:
00007b 300c      	CPI  R16,12
00007c f470      	BRSH _0x6
00007d e0a2      	LDI  R26,LOW(2)
00007e e0b0      	LDI  R27,0
00007f d4bc      	RCALL _delay_ms
000080 2fe0      	MOV  R30,R16
000081 e0f0      	LDI  R31,0
000082 01de      	MOVW R26,R28
000083 9611      	ADIW R26,1
000084 0fae      	ADD  R26,R30
000085 1fbf      	ADC  R27,R31
000086 91ac      	LD   R26,X
000087 d00f      	RCALL _SendDataBitsLCD
000088 d00b      	RCALL _PulseEn
000089 5f0f      	SUBI R16,-1
00008a cff0      	RJMP _0x5
                 _0x6:
00008b e0ec      	LDI  R30,LOW(12)
00008c 93e0 0300 	STS  _cursor,R30
00008e 91a0 0300 	LDS  R26,_cursor
000090 d01e      	RCALL _WriteComandLCD
000091 8108      	LDD  R16,Y+0
000092 962d      	ADIW R28,13
000093 9508      	RET
                 ; .FEND
                 _PulseEn:
                 ; .FSTART _PulseEn
000094 9a5b          SBI __lcd_port,__lcd_EN  // EN=1;
000095 985b          CBI __lcd_port,__lcd_EN // EN=0;
000096 9508      	RET
                 ; .FEND
                 _SendDataBitsLCD:
                 ; .FSTART _SendDataBitsLCD
000097 930a      	ST   -Y,R16
000098 2f0a      	MOV  R16,R26
                 ;	dato -> R16
000099 ff03      	SBRS R16,3
00009a c002      	RJMP _0x7
00009b 9a5f      	SBI __lcd_port,__lcd_D7
00009c c001      	RJMP _0x8
                 _0x7:
00009d 985f      	CBI __lcd_port,__lcd_D7
                 _0x8:
00009e ff02      	SBRS R16,2
00009f c002      	RJMP _0x9
0000a0 9a5e      	SBI __lcd_port,__lcd_D6
0000a1 c001      	RJMP _0xA
                 _0x9:
0000a2 985e      	CBI __lcd_port,__lcd_D6
                 _0xA:
0000a3 ff01      	SBRS R16,1
0000a4 c002      	RJMP _0xB
0000a5 9a5d      	SBI __lcd_port,__lcd_D5
0000a6 c001      	RJMP _0xC
                 _0xB:
0000a7 985d      	CBI __lcd_port,__lcd_D5
                 _0xC:
0000a8 ff00      	SBRS R16,0
0000a9 c002      	RJMP _0xD
0000aa 9a5c      	SBI __lcd_port,__lcd_D4
0000ab c001      	RJMP _0xE
                 _0xD:
0000ac 985c      	CBI __lcd_port,__lcd_D4
                 _0xE:
0000ad 9109      	LD   R16,Y+
0000ae 9508      	RET
                 ; .FEND
                 _WriteComandLCD:
                 ; .FSTART _WriteComandLCD
0000af 931a      	ST   -Y,R17
0000b0 930a      	ST   -Y,R16
0000b1 2f1a      	MOV  R17,R26
                 ;	Comando -> R17
                 ;	tempComando -> R16
0000b2 985a      	CBI __lcd_port,__lcd_RS
0000b3 c004      	RJMP _0x2060003
                 ; .FEND
                 _CharLCD:
                 ; .FSTART _CharLCD
0000b4 931a      	ST   -Y,R17
0000b5 930a      	ST   -Y,R16
0000b6 2f1a      	MOV  R17,R26
                 ;	dato -> R17
                 ;	tempdato -> R16
0000b7 9a5a      	SBI __lcd_port,__lcd_RS
                 _0x2060003:
0000b8 e0a2      	LDI  R26,LOW(2)
0000b9 e0b0      	LDI  R27,0
0000ba d481      	RCALL _delay_ms
0000bb 2fe1      	MOV  R30,R17
0000bc 7fe0      	ANDI R30,LOW(0xF0)
0000bd 2f0e      	MOV  R16,R30
0000be 9502      	SWAP R16
0000bf 700f      	ANDI R16,0xF
0000c0 2fa0      	MOV  R26,R16
0000c1 dfd5      	RCALL _SendDataBitsLCD
0000c2 dfd1      	RCALL _PulseEn
0000c3 2fe1      	MOV  R30,R17
0000c4 70ef      	ANDI R30,LOW(0xF)
0000c5 2f0e      	MOV  R16,R30
0000c6 2fa0      	MOV  R26,R16
0000c7 dfcf      	RCALL _SendDataBitsLCD
0000c8 e0a2      	LDI  R26,LOW(2)
0000c9 e0b0      	LDI  R27,0
0000ca d471      	RCALL _delay_ms
0000cb dfc8      	RCALL _PulseEn
0000cc 9109      	LD   R16,Y+
0000cd 9119      	LD   R17,Y+
0000ce 9508      	RET
                 ; .FEND
                 ;	Mensaje -> R17,R18
                 ;	i -> R16
                 ;	Mensaje -> R19,R20
                 ;	tiempo -> R17,R18
                 ;	i -> R16
                 _StringLCDVar:
                 ; .FSTART _StringLCDVar
0000cf d2da      	RCALL __SAVELOCR3
                +
0000d0 2f1a     +MOV R17 , R26
0000d1 2f2b     +MOV R18 , R27
                 	__PUTW2R 17,18
                 ;	Mensaje -> R17,R18
                 ;	i -> R16
0000d2 e000      	LDI  R16,LOW(0)
                 _0x16:
0000d3 2fe0      	MOV  R30,R16
0000d4 5f0f      	SUBI R16,-1
0000d5 e0f0      	LDI  R31,0
0000d6 0fe1      	ADD  R30,R17
0000d7 1ff2      	ADC  R31,R18
0000d8 81a0      	LD   R26,Z
0000d9 dfda      	RCALL _CharLCD
                +
0000da 2fa1     +MOV R26 , R17
0000db 2fb2     +MOV R27 , R18
                 	__GETW2R 17,18
0000dc 27ee      	CLR  R30
0000dd 0fa0      	ADD  R26,R16
0000de 1fbe      	ADC  R27,R30
0000df 91ec      	LD   R30,X
0000e0 30e0      	CPI  R30,0
0000e1 f789      	BRNE _0x16
0000e2 d2ce      	RCALL __LOADLOCR3
0000e3 c022      	RJMP _0x2060002
                 ; .FEND
                 _MoveCursor:
                 ; .FSTART _MoveCursor
0000e4 931a      	ST   -Y,R17
0000e5 930a      	ST   -Y,R16
0000e6 2f0a      	MOV  R16,R26
0000e7 811a      	LDD  R17,Y+2
                 ;	x -> R17
                 ;	y -> R16
0000e8 2fe0      	MOV  R30,R16
0000e9 e0f0      	LDI  R31,0
0000ea 9730      	SBIW R30,0
0000eb f419      	BRNE _0x1B
0000ec 2fa1      	MOV  R26,R17
0000ed 58a0      	SUBI R26,-LOW(128)
0000ee c014      	RJMP _0x42
                 _0x1B:
0000ef 30e1      	CPI  R30,LOW(0x1)
0000f0 e0a0      	LDI  R26,HIGH(0x1)
0000f1 07fa      	CPC  R31,R26
0000f2 f419      	BRNE _0x1C
0000f3 2fa1      	MOV  R26,R17
0000f4 54a0      	SUBI R26,-LOW(192)
0000f5 c00d      	RJMP _0x42
                 _0x1C:
0000f6 30e2      	CPI  R30,LOW(0x2)
0000f7 e0a0      	LDI  R26,HIGH(0x2)
0000f8 07fa      	CPC  R31,R26
0000f9 f419      	BRNE _0x1D
0000fa 2fa1      	MOV  R26,R17
0000fb 56ac      	SUBI R26,-LOW(148)
0000fc c006      	RJMP _0x42
                 _0x1D:
0000fd 30e3      	CPI  R30,LOW(0x3)
0000fe e0a0      	LDI  R26,HIGH(0x3)
0000ff 07fa      	CPC  R31,R26
000100 f419      	BRNE _0x1A
000101 2fa1      	MOV  R26,R17
000102 52ac      	SUBI R26,-LOW(212)
                 _0x42:
000103 dfab      	RCALL _WriteComandLCD
                 _0x1A:
000104 8119      	LDD  R17,Y+1
000105 8108      	LDD  R16,Y+0
                 _0x2060002:
000106 9623      	ADIW R28,3
000107 9508      	RET
                 ; .FEND
                 ;	NoCaracter -> R19
                 ;	datos -> R17,R18
                 ;	i -> R16
                 ;void tono(float);
                 ;void noTono();
                 ;void main(void)
                 ; 0000 001F {
                 _main:
                 ; .FSTART _main
                 ; 0000 0020 SetupLCD();
000108 df60      	RCALL _SetupLCD
                 ; 0000 0021 PORTC = 0x1F;       // Pull ups de PC0 a PC4
000109 e1ef      	LDI  R30,LOW(31)
00010a b9e8      	OUT  0x8,R30
                 ; 0000 0022 
                 ; 0000 0023 TCCR1A=0;
00010b e0e0      	LDI  R30,LOW(0)
00010c 93e0 0080 	STS  128,R30
                 ; 0000 0024 TCCR1B=0x0A;            //Timer 1 en CTC con CK/8
00010e e0ea      	LDI  R30,LOW(10)
00010f 93e0 0081 	STS  129,R30
                 ; 0000 0025 OCR1AH=31249/256;
000111 e7ea      	LDI  R30,LOW(122)
000112 93e0 0089 	STS  137,R30
                 ; 0000 0026 OCR1AL=31249%256;
000114 e1e1      	LDI  R30,LOW(17)
000115 93e0 0088 	STS  136,R30
                 ; 0000 0027 while (1)      // El ciclo completo tarda 0.25seg
                 _0x22:
                 ; 0000 0028 {
                 ; 0000 0029 //Imprimir hora en el LCD
                 ; 0000 002A sprintf(Cadena, "%02i:%02i:%02i  ", H, M, S);
000117 e0e5      	LDI  R30,LOW(_Cadena)
000118 e0f3      	LDI  R31,HIGH(_Cadena)
000119 93fa      	ST   -Y,R31
00011a 93ea      	ST   -Y,R30
                +
00011b e8e6     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
00011c e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
00011d 93fa      	ST   -Y,R31
00011e 93ea      	ST   -Y,R30
00011f 91e0 0302 	LDS  R30,_H
000121 d24e      	RCALL SUBOPT_0x0
000122 91e0 0303 	LDS  R30,_M
000124 d24b      	RCALL SUBOPT_0x0
000125 91e0 0304 	LDS  R30,_S
000127 d248      	RCALL SUBOPT_0x0
000128 e08c      	LDI  R24,12
000129 d1f6      	RCALL _sprintf
00012a 9660      	ADIW R28,16
                 ; 0000 002B MoveCursor(3, 0);
00012b e0e3      	LDI  R30,LOW(3)
00012c 93ea      	ST   -Y,R30
00012d e0a0      	LDI  R26,LOW(0)
00012e dfb5      	RCALL _MoveCursor
                 ; 0000 002C StringLCDVar(Cadena);
00012f e0a5      	LDI  R26,LOW(_Cadena)
000130 e0b3      	LDI  R27,HIGH(_Cadena)
000131 df9d      	RCALL _StringLCDVar
                 ; 0000 002D 
                 ; 0000 002E while(TIFR1.OCF1A==0);   //Espera a 0.25seg
                 _0x25:
000132 9bb1      	SBIS 0x16,1
000133 cffe      	RJMP _0x25
                 ; 0000 002F TIFR1.OCF1A=1;           //Borra Bandera
000134 9ab1      	SBI  0x16,1
                 ; 0000 0030 i++;
000135 91e0 0301 	LDS  R30,_i
000137 5fef      	SUBI R30,-LOW(1)
000138 93e0 0301 	STS  _i,R30
                 ; 0000 0031 
                 ; 0000 0032 if (i==4)
00013a 91a0 0301 	LDS  R26,_i
00013c 30a4      	CPI  R26,LOW(0x4)
00013d f549      	BRNE _0x2A
                 ; 0000 0033 {
                 ; 0000 0034 i=0;
00013e e0e0      	LDI  R30,LOW(0)
00013f 93e0 0301 	STS  _i,R30
                 ; 0000 0035 S++;
000141 91e0 0304 	LDS  R30,_S
000143 5fef      	SUBI R30,-LOW(1)
000144 93e0 0304 	STS  _S,R30
                 ; 0000 0036 if(S==2)
000146 91a0 0304 	LDS  R26,_S
000148 30a2      	CPI  R26,LOW(0x2)
000149 f409      	BRNE _0x2B
                 ; 0000 0037 noTono();
00014a d07d      	RCALL _noTono
                 ; 0000 0038 if (S==60)
                 _0x2B:
00014b 91a0 0304 	LDS  R26,_S
00014d 33ac      	CPI  R26,LOW(0x3C)
00014e f4c1      	BRNE _0x2C
                 ; 0000 0039 {
                 ; 0000 003A S=0;
00014f e0e0      	LDI  R30,LOW(0)
000150 93e0 0304 	STS  _S,R30
                 ; 0000 003B M++;
000152 d220      	RCALL SUBOPT_0x1
                 ; 0000 003C if (M==60)
000153 91a0 0303 	LDS  R26,_M
000155 33ac      	CPI  R26,LOW(0x3C)
000156 f481      	BRNE _0x2D
                 ; 0000 003D {
                 ; 0000 003E tono(400);
                +
000157 e0a0     +LDI R26 , LOW ( 0x43C80000 )
000158 e0b0     +LDI R27 , HIGH ( 0x43C80000 )
000159 ec88     +LDI R24 , BYTE3 ( 0x43C80000 )
00015a e493     +LDI R25 , BYTE4 ( 0x43C80000 )
                 	__GETD2N 0x43C80000
00015b d03a      	RCALL _tono
                 ; 0000 003F M=0;
00015c e0e0      	LDI  R30,LOW(0)
00015d 93e0 0303 	STS  _M,R30
                 ; 0000 0040 H++;
00015f d219      	RCALL SUBOPT_0x2
                 ; 0000 0041 if (H==24)
000160 91a0 0302 	LDS  R26,_H
000162 31a8      	CPI  R26,LOW(0x18)
000163 f419      	BRNE _0x2E
                 ; 0000 0042 H=0;
000164 e0e0      	LDI  R30,LOW(0)
000165 93e0 0302 	STS  _H,R30
                 ; 0000 0043 }
                 _0x2E:
                 ; 0000 0044 
                 ; 0000 0045 }
                 _0x2D:
                 ; 0000 0046 }
                 _0x2C:
                 ; 0000 0047 //Revisar switches
                 ; 0000 0048 if(PINC.4 == 0 && H < 23){
                 _0x2A:
000167 9934      	SBIC 0x6,4
000168 c004      	RJMP _0x30
000169 91a0 0302 	LDS  R26,_H
00016b 31a7      	CPI  R26,LOW(0x17)
00016c f00c      	BRLT _0x31
                 _0x30:
00016d c001      	RJMP _0x2F
                 _0x31:
                 ; 0000 0049 H++;
00016e d20a      	RCALL SUBOPT_0x2
                 ; 0000 004A }
                 ; 0000 004B if(PINC.3 == 0 && H > 0){
                 _0x2F:
00016f 9933      	SBIC 0x6,3
000170 c004      	RJMP _0x33
000171 91a0 0302 	LDS  R26,_H
000173 30a1      	CPI  R26,LOW(0x1)
000174 f40c      	BRGE _0x34
                 _0x33:
000175 c005      	RJMP _0x32
                 _0x34:
                 ; 0000 004C H--;
000176 91e0 0302 	LDS  R30,_H
000178 50e1      	SUBI R30,LOW(1)
000179 93e0 0302 	STS  _H,R30
                 ; 0000 004D }
                 ; 0000 004E if(PINC.2 == 0 && M < 59){
                 _0x32:
00017b 9932      	SBIC 0x6,2
00017c c004      	RJMP _0x36
00017d 91a0 0303 	LDS  R26,_M
00017f 33ab      	CPI  R26,LOW(0x3B)
000180 f00c      	BRLT _0x37
                 _0x36:
000181 c001      	RJMP _0x35
                 _0x37:
                 ; 0000 004F M++;
000182 d1f0      	RCALL SUBOPT_0x1
                 ; 0000 0050 }
                 ; 0000 0051 if(PINC.1 == 0 && M > 0){
                 _0x35:
000183 9931      	SBIC 0x6,1
000184 c004      	RJMP _0x39
000185 91a0 0303 	LDS  R26,_M
000187 30a1      	CPI  R26,LOW(0x1)
000188 f40c      	BRGE _0x3A
                 _0x39:
000189 c005      	RJMP _0x38
                 _0x3A:
                 ; 0000 0052 M--;
00018a 91e0 0303 	LDS  R30,_M
00018c 50e1      	SUBI R30,LOW(1)
00018d 93e0 0303 	STS  _M,R30
                 ; 0000 0053 }
                 ; 0000 0054 if(PINC.0 == 0){
                 _0x38:
00018f 9930      	SBIC 0x6,0
000190 c003      	RJMP _0x3B
                 ; 0000 0055 S = 0;
000191 e0e0      	LDI  R30,LOW(0)
000192 93e0 0304 	STS  _S,R30
                 ; 0000 0056 }
                 ; 0000 0057 
                 ; 0000 0058 }
                 _0x3B:
000194 cf82      	RJMP _0x22
                 ; 0000 0059 }
                 _0x3C:
000195 cfff      	RJMP _0x3C
                 ; .FEND
                 ;void tono(float frec){
                 ; 0000 005A void tono(float frec){
                 _tono:
                 ; .FSTART _tono
                 ; 0000 005B float cuentas;
                 ; 0000 005C unsigned int cuentasEnt;
                 ; 0000 005D DDRB.6 = 1;                      // PB1 de Salida
000196 d245      	RCALL __PUTPARD2
000197 9724      	SBIW R28,4
000198 931a      	ST   -Y,R17
000199 930a      	ST   -Y,R16
                 ;	frec -> Y+6
                 ;	cuentas -> Y+2
                 ;	cuentasEnt -> R16,R17
00019a 9a26      	SBI  0x4,6
                 ; 0000 005E TCCR0A = 0x40;                   // Timer 1 en CTC
00019b e4e0      	LDI  R30,LOW(64)
00019c bde4      	OUT  0x24,R30
                 ; 0000 005F TCCR0B = 0x09;                   // Con pre-escalador de CK
00019d e0e9      	LDI  R30,LOW(9)
00019e bde5      	OUT  0x25,R30
                 ; 0000 0060 cuentas = 500000.0 / frec;       // Cálculo de cuentas
                +
00019f 81ee     +LDD R30 , Y + 6
0001a0 81ff     +LDD R31 , Y + 6 + 1
0001a1 8568     +LDD R22 , Y + 6 + 2
0001a2 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
                +
0001a3 e0a0     +LDI R26 , LOW ( 0x48F42400 )
0001a4 e2b4     +LDI R27 , HIGH ( 0x48F42400 )
0001a5 ef84     +LDI R24 , BYTE3 ( 0x48F42400 )
0001a6 e498     +LDI R25 , BYTE4 ( 0x48F42400 )
                 	__GETD2N 0x48F42400
0001a7 d330      	RCALL __DIVF21
                +
0001a8 83ea     +STD Y + 2 , R30
0001a9 83fb     +STD Y + 2 + 1 , R31
0001aa 836c     +STD Y + 2 + 2 , R22
0001ab 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
                 ; 0000 0061 cuentasEnt = cuentas;            // Nos quedamos con la parte entera de cuentas
0001ac d26e      	RCALL __CFD1U
0001ad 018f      	MOVW R16,R30
                 ; 0000 0062 if (cuentas-cuentasEnt >= 0.5)   // Si la parte decimal es mayor o igual a 0.5
                +
0001ae 81aa     +LDD R26 , Y + 2
0001af 81bb     +LDD R27 , Y + 2 + 1
0001b0 818c     +LDD R24 , Y + 2 + 2
0001b1 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
0001b2 2766      	CLR  R22
0001b3 2777      	CLR  R23
0001b4 d29f      	RCALL __CDF1
0001b5 d22b      	RCALL __SWAPD12
0001b6 d2d0      	RCALL __SUBF12
0001b7 01df      	MOVW R26,R30
0001b8 01cb      	MOVW R24,R22
                +
0001b9 e0e0     +LDI R30 , LOW ( 0x3F000000 )
0001ba e0f0     +LDI R31 , HIGH ( 0x3F000000 )
0001bb e060     +LDI R22 , BYTE3 ( 0x3F000000 )
0001bc e37f     +LDI R23 , BYTE4 ( 0x3F000000 )
                 	__GETD1N 0x3F000000
0001bd d35e      	RCALL __CMPF12
0001be f010      	BRLO _0x3F
                 ; 0000 0063 {
                 ; 0000 0064 cuentasEnt++;               // Aumentamos la parte entera
                +
0001bf 5f0f     +SUBI R16 , LOW ( - 1 )
0001c0 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 0065 }
                 ; 0000 0066 OCR0A = (cuentasEnt -1);
                 _0x3F:
0001c1 2fe0      	MOV  R30,R16
0001c2 50e1      	SUBI R30,LOW(1)
0001c3 bde7      	OUT  0x27,R30
                 ; 0000 0067 }
0001c4 8119      	LDD  R17,Y+1
0001c5 8108      	LDD  R16,Y+0
0001c6 962a      	ADIW R28,10
0001c7 9508      	RET
                 ; .FEND
                 ;void noTono(){
                 ; 0000 0069 void noTono(){
                 _noTono:
                 ; .FSTART _noTono
                 ; 0000 006A TCCR0A = 0x00;                  // Apaga el tono
0001c8 e0e0      	LDI  R30,LOW(0)
0001c9 bde4      	OUT  0x24,R30
                 ; 0000 006B TCCR0B = 0x00;                  // Apaga el tono
0001ca bde5      	OUT  0x25,R30
                 ; 0000 006C PORTB.1 = 0;
0001cb 9829      	CBI  0x5,1
                 ; 0000 006D }
0001cc 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
                 ; .FSTART _put_buff_G100
0001cd d1da      	RCALL __SAVELOCR5
0001ce 019d      	MOVW R18,R26
0001cf 814d      	LDD  R20,Y+5
0001d0 9612      	ADIW R26,2
                +
0001d1 91ed     +LD R30 , X +
0001d2 91fc     +LD R31 , X
0001d3 9711     +SBIW R26 , 1
                 	__GETW1P
0001d4 9730      	SBIW R30,0
0001d5 f0e9      	BREQ _0x2000016
0001d6 01d9      	MOVW R26,R18
0001d7 d1a7      	RCALL SUBOPT_0x3
0001d8 018f      	MOVW R16,R30
0001d9 9730      	SBIW R30,0
0001da f059      	BREQ _0x2000018
                +
0001db 3002     +CPI R16 , LOW ( 2 )
0001dc e0e0     +LDI R30 , HIGH ( 2 )
0001dd 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0001de f060      	BRLO _0x2000019
0001df 01f8      	MOVW R30,R16
0001e0 9731      	SBIW R30,1
0001e1 018f      	MOVW R16,R30
                +
0001e2 01d9     +MOVW R26 , R18
0001e3 9614     +ADIW R26 , 4
0001e4 93ed     +ST X + , R30
0001e5 93fc     +ST X , R31
                 	__PUTW1RNS 18,4
                 _0x2000018:
0001e6 01d9      	MOVW R26,R18
0001e7 9612      	ADIW R26,2
0001e8 d19b      	RCALL SUBOPT_0x4
0001e9 9731      	SBIW R30,1
0001ea 8340      	ST   Z,R20
                 _0x2000019:
0001eb 01d9      	MOVW R26,R18
                +
0001ec 91ed     +LD R30 , X +
0001ed 91fc     +LD R31 , X
0001ee 9711     +SBIW R26 , 1
                 	__GETW1P
0001ef 23ff      	TST  R31
0001f0 f00a      	BRMI _0x200001A
0001f1 d192      	RCALL SUBOPT_0x4
                 _0x200001A:
0001f2 c005      	RJMP _0x200001B
                 _0x2000016:
0001f3 01d9      	MOVW R26,R18
0001f4 efef      	LDI  R30,LOW(65535)
0001f5 efff      	LDI  R31,HIGH(65535)
0001f6 93ed      	ST   X+,R30
0001f7 93fc      	ST   X,R31
                 _0x200001B:
0001f8 d1b6      	RCALL __LOADLOCR5
0001f9 9626      	ADIW R28,6
0001fa 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
0001fb 93ba      	ST   -Y,R27
0001fc 93aa      	ST   -Y,R26
0001fd 9726      	SBIW R28,6
0001fe d1a8      	RCALL __SAVELOCR6
0001ff e000      	LDI  R16,0
000200 85ac      	LDD  R26,Y+12
000201 85bd      	LDD  R27,Y+12+1
000202 e0e0      	LDI  R30,LOW(0)
000203 e0f0      	LDI  R31,HIGH(0)
000204 93ed      	ST   X+,R30
000205 93fc      	ST   X,R31
                 _0x200001C:
000206 89ea      	LDD  R30,Y+18
000207 89fb      	LDD  R31,Y+18+1
000208 9631      	ADIW R30,1
000209 8bea      	STD  Y+18,R30
00020a 8bfb      	STD  Y+18+1,R31
00020b 9731      	SBIW R30,1
00020c 91e4      	LPM  R30,Z
00020d 2f3e      	MOV  R19,R30
00020e 30e0      	CPI  R30,0
00020f f409      	BRNE PC+2
000210 c108      	RJMP _0x200001E
000211 2fe0      	MOV  R30,R16
000212 30e0      	CPI  R30,0
000213 f431      	BRNE _0x2000022
000214 3235      	CPI  R19,37
000215 f411      	BRNE _0x2000023
000216 e001      	LDI  R16,LOW(1)
000217 c001      	RJMP _0x2000024
                 _0x2000023:
000218 d171      	RCALL SUBOPT_0x5
                 _0x2000024:
000219 c0fe      	RJMP _0x2000021
                 _0x2000022:
00021a 30e1      	CPI  R30,LOW(0x1)
00021b f4a1      	BRNE _0x2000025
00021c 3235      	CPI  R19,37
00021d f411      	BRNE _0x2000026
00021e d16b      	RCALL SUBOPT_0x5
00021f c0f7      	RJMP _0x20000D2
                 _0x2000026:
000220 e002      	LDI  R16,LOW(2)
000221 e050      	LDI  R21,LOW(0)
000222 e010      	LDI  R17,LOW(0)
000223 323d      	CPI  R19,45
000224 f411      	BRNE _0x2000027
000225 e011      	LDI  R17,LOW(1)
000226 c0f1      	RJMP _0x2000021
                 _0x2000027:
000227 323b      	CPI  R19,43
000228 f411      	BRNE _0x2000028
000229 e25b      	LDI  R21,LOW(43)
00022a c0ed      	RJMP _0x2000021
                 _0x2000028:
00022b 3230      	CPI  R19,32
00022c f411      	BRNE _0x2000029
00022d e250      	LDI  R21,LOW(32)
00022e c0e9      	RJMP _0x2000021
                 _0x2000029:
00022f c002      	RJMP _0x200002A
                 _0x2000025:
000230 30e2      	CPI  R30,LOW(0x2)
000231 f439      	BRNE _0x200002B
                 _0x200002A:
000232 e040      	LDI  R20,LOW(0)
000233 e003      	LDI  R16,LOW(3)
000234 3330      	CPI  R19,48
000235 f411      	BRNE _0x200002C
000236 6810      	ORI  R17,LOW(128)
000237 c0e0      	RJMP _0x2000021
                 _0x200002C:
000238 c003      	RJMP _0x200002D
                 _0x200002B:
000239 30e3      	CPI  R30,LOW(0x3)
00023a f009      	BREQ PC+2
00023b c0dc      	RJMP _0x2000021
                 _0x200002D:
00023c 3330      	CPI  R19,48
00023d f010      	BRLO _0x2000030
00023e 333a      	CPI  R19,58
00023f f008      	BRLO _0x2000031
                 _0x2000030:
000240 c007      	RJMP _0x200002F
                 _0x2000031:
000241 e0aa      	LDI  R26,LOW(10)
000242 9f4a      	MUL  R20,R26
000243 2d40      	MOV  R20,R0
000244 2fe3      	MOV  R30,R19
000245 53e0      	SUBI R30,LOW(48)
000246 0f4e      	ADD  R20,R30
000247 c0d0      	RJMP _0x2000021
                 _0x200002F:
000248 2fe3      	MOV  R30,R19
000249 36e3      	CPI  R30,LOW(0x63)
00024a f439      	BRNE _0x2000035
00024b d145      	RCALL SUBOPT_0x6
00024c 89e8      	LDD  R30,Y+16
00024d 89f9      	LDD  R31,Y+16+1
00024e 81a4      	LDD  R26,Z+4
00024f 93aa      	ST   -Y,R26
000250 d146      	RCALL SUBOPT_0x7
000251 c0c5      	RJMP _0x2000036
                 _0x2000035:
000252 37e3      	CPI  R30,LOW(0x73)
000253 f429      	BRNE _0x2000038
000254 d13c      	RCALL SUBOPT_0x6
000255 d147      	RCALL SUBOPT_0x8
000256 d100      	RCALL _strlen
000257 2f0e      	MOV  R16,R30
000258 c007      	RJMP _0x2000039
                 _0x2000038:
000259 37e0      	CPI  R30,LOW(0x70)
00025a f449      	BRNE _0x200003B
00025b d135      	RCALL SUBOPT_0x6
00025c d140      	RCALL SUBOPT_0x8
00025d d105      	RCALL _strlenf
00025e 2f0e      	MOV  R16,R30
00025f 6018      	ORI  R17,LOW(8)
                 _0x2000039:
000260 6012      	ORI  R17,LOW(2)
000261 771f      	ANDI R17,LOW(127)
000262 e020      	LDI  R18,LOW(0)
000263 c037      	RJMP _0x200003C
                 _0x200003B:
000264 36e4      	CPI  R30,LOW(0x64)
000265 f011      	BREQ _0x200003F
000266 36e9      	CPI  R30,LOW(0x69)
000267 f411      	BRNE _0x2000040
                 _0x200003F:
000268 6014      	ORI  R17,LOW(4)
000269 c002      	RJMP _0x2000041
                 _0x2000040:
00026a 37e5      	CPI  R30,LOW(0x75)
00026b f431      	BRNE _0x2000042
                 _0x2000041:
00026c e6e8      	LDI  R30,LOW(_tbl10_G100*2)
00026d e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
00026e 83ee      	STD  Y+6,R30
00026f 83ff      	STD  Y+6+1,R31
000270 e005      	LDI  R16,LOW(5)
000271 c00c      	RJMP _0x2000043
                 _0x2000042:
000272 35e8      	CPI  R30,LOW(0x58)
000273 f411      	BRNE _0x2000045
000274 6018      	ORI  R17,LOW(8)
000275 c003      	RJMP _0x2000046
                 _0x2000045:
000276 37e8      	CPI  R30,LOW(0x78)
000277 f009      	BREQ PC+2
000278 c09e      	RJMP _0x2000077
                 _0x2000046:
000279 e7e2      	LDI  R30,LOW(_tbl16_G100*2)
00027a e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
00027b 83ee      	STD  Y+6,R30
00027c 83ff      	STD  Y+6+1,R31
00027d e004      	LDI  R16,LOW(4)
                 _0x2000043:
00027e ff12      	SBRS R17,2
00027f c015      	RJMP _0x2000048
000280 d110      	RCALL SUBOPT_0x6
000281 89a8      	LDD  R26,Y+16
000282 89b9      	LDD  R27,Y+16+1
000283 9614      	ADIW R26,4
000284 91ed      	LD   R30,X+
000285 91fd      	LD   R31,X+
000286 87ea      	STD  Y+10,R30
000287 87fb      	STD  Y+10+1,R31
000288 85ab      	LDD  R26,Y+11
000289 23aa      	TST  R26
00028a f422      	BRPL _0x2000049
00028b d135      	RCALL __ANEGW1
00028c 87ea      	STD  Y+10,R30
00028d 87fb      	STD  Y+10+1,R31
00028e e25d      	LDI  R21,LOW(45)
                 _0x2000049:
00028f 3050      	CPI  R21,0
000290 f011      	BREQ _0x200004A
000291 5f0f      	SUBI R16,-LOW(1)
000292 c001      	RJMP _0x200004B
                 _0x200004A:
000293 7f1b      	ANDI R17,LOW(251)
                 _0x200004B:
000294 c006      	RJMP _0x200004C
                 _0x2000048:
000295 d0fb      	RCALL SUBOPT_0x6
000296 89a8      	LDD  R26,Y+16
000297 89b9      	LDD  R27,Y+16+1
000298 d0e6      	RCALL SUBOPT_0x3
000299 87ea      	STD  Y+10,R30
00029a 87fb      	STD  Y+10+1,R31
                 _0x200004C:
                 _0x200003C:
00029b fd10      	SBRC R17,0
00029c c010      	RJMP _0x200004D
                 _0x200004E:
00029d 1704      	CP   R16,R20
00029e f470      	BRSH _0x2000050
00029f ff17      	SBRS R17,7
0002a0 c008      	RJMP _0x2000051
0002a1 ff12      	SBRS R17,2
0002a2 c004      	RJMP _0x2000052
0002a3 7f1b      	ANDI R17,LOW(251)
0002a4 2f35      	MOV  R19,R21
0002a5 5001      	SUBI R16,LOW(1)
0002a6 c001      	RJMP _0x2000053
                 _0x2000052:
0002a7 e330      	LDI  R19,LOW(48)
                 _0x2000053:
0002a8 c001      	RJMP _0x2000054
                 _0x2000051:
0002a9 e230      	LDI  R19,LOW(32)
                 _0x2000054:
0002aa d0df      	RCALL SUBOPT_0x5
0002ab 5041      	SUBI R20,LOW(1)
0002ac cff0      	RJMP _0x200004E
                 _0x2000050:
                 _0x200004D:
0002ad 2f20      	MOV  R18,R16
0002ae ff11      	SBRS R17,1
0002af c016      	RJMP _0x2000055
                 _0x2000056:
0002b0 3020      	CPI  R18,0
0002b1 f099      	BREQ _0x2000058
0002b2 ff13      	SBRS R17,3
0002b3 c006      	RJMP _0x2000059
0002b4 81ee      	LDD  R30,Y+6
0002b5 81ff      	LDD  R31,Y+6+1
0002b6 9135      	LPM  R19,Z+
0002b7 83ee      	STD  Y+6,R30
0002b8 83ff      	STD  Y+6+1,R31
0002b9 c005      	RJMP _0x200005A
                 _0x2000059:
0002ba 81ae      	LDD  R26,Y+6
0002bb 81bf      	LDD  R27,Y+6+1
0002bc 913d      	LD   R19,X+
0002bd 83ae      	STD  Y+6,R26
0002be 83bf      	STD  Y+6+1,R27
                 _0x200005A:
0002bf d0ca      	RCALL SUBOPT_0x5
0002c0 3040      	CPI  R20,0
0002c1 f009      	BREQ _0x200005B
0002c2 5041      	SUBI R20,LOW(1)
                 _0x200005B:
0002c3 5021      	SUBI R18,LOW(1)
0002c4 cfeb      	RJMP _0x2000056
                 _0x2000058:
0002c5 c048      	RJMP _0x200005C
                 _0x2000055:
                 _0x200005E:
0002c6 e330      	LDI  R19,LOW(48)
0002c7 81ee      	LDD  R30,Y+6
0002c8 81ff      	LDD  R31,Y+6+1
0002c9 d109      	RCALL __GETW1PF
0002ca 87e8      	STD  Y+8,R30
0002cb 87f9      	STD  Y+8+1,R31
0002cc 81ee      	LDD  R30,Y+6
0002cd 81ff      	LDD  R31,Y+6+1
0002ce 9632      	ADIW R30,2
0002cf 83ee      	STD  Y+6,R30
0002d0 83ff      	STD  Y+6+1,R31
                 _0x2000060:
0002d1 85e8      	LDD  R30,Y+8
0002d2 85f9      	LDD  R31,Y+8+1
0002d3 85aa      	LDD  R26,Y+10
0002d4 85bb      	LDD  R27,Y+10+1
0002d5 17ae      	CP   R26,R30
0002d6 07bf      	CPC  R27,R31
0002d7 f050      	BRLO _0x2000062
0002d8 5f3f      	SUBI R19,-LOW(1)
0002d9 85a8      	LDD  R26,Y+8
0002da 85b9      	LDD  R27,Y+8+1
0002db 85ea      	LDD  R30,Y+10
0002dc 85fb      	LDD  R31,Y+10+1
0002dd 1bea      	SUB  R30,R26
0002de 0bfb      	SBC  R31,R27
0002df 87ea      	STD  Y+10,R30
0002e0 87fb      	STD  Y+10+1,R31
0002e1 cfef      	RJMP _0x2000060
                 _0x2000062:
0002e2 333a      	CPI  R19,58
0002e3 f028      	BRLO _0x2000063
0002e4 ff13      	SBRS R17,3
0002e5 c002      	RJMP _0x2000064
0002e6 5f39      	SUBI R19,-LOW(7)
0002e7 c001      	RJMP _0x2000065
                 _0x2000064:
0002e8 5d39      	SUBI R19,-LOW(39)
                 _0x2000065:
                 _0x2000063:
0002e9 fd14      	SBRC R17,4
0002ea c019      	RJMP _0x2000067
0002eb 3331      	CPI  R19,49
0002ec f420      	BRSH _0x2000069
0002ed 85a8      	LDD  R26,Y+8
0002ee 85b9      	LDD  R27,Y+8+1
0002ef 9711      	SBIW R26,1
0002f0 f409      	BRNE _0x2000068
                 _0x2000069:
0002f1 c009      	RJMP _0x20000D3
                 _0x2000068:
0002f2 1742      	CP   R20,R18
0002f3 f010      	BRLO _0x200006D
0002f4 ff10      	SBRS R17,0
0002f5 c001      	RJMP _0x200006E
                 _0x200006D:
0002f6 c011      	RJMP _0x200006C
                 _0x200006E:
0002f7 e230      	LDI  R19,LOW(32)
0002f8 ff17      	SBRS R17,7
0002f9 c00a      	RJMP _0x200006F
0002fa e330      	LDI  R19,LOW(48)
                 _0x20000D3:
0002fb 6110      	ORI  R17,LOW(16)
0002fc ff12      	SBRS R17,2
0002fd c006      	RJMP _0x2000070
0002fe 7f1b      	ANDI R17,LOW(251)
0002ff 935a      	ST   -Y,R21
000300 d096      	RCALL SUBOPT_0x7
000301 3040      	CPI  R20,0
000302 f009      	BREQ _0x2000071
000303 5041      	SUBI R20,LOW(1)
                 _0x2000071:
                 _0x2000070:
                 _0x200006F:
                 _0x2000067:
000304 d085      	RCALL SUBOPT_0x5
000305 3040      	CPI  R20,0
000306 f009      	BREQ _0x2000072
000307 5041      	SUBI R20,LOW(1)
                 _0x2000072:
                 _0x200006C:
000308 5021      	SUBI R18,LOW(1)
000309 85a8      	LDD  R26,Y+8
00030a 85b9      	LDD  R27,Y+8+1
00030b 9712      	SBIW R26,2
00030c f008      	BRLO _0x200005F
00030d cfb8      	RJMP _0x200005E
                 _0x200005F:
                 _0x200005C:
00030e ff10      	SBRS R17,0
00030f c007      	RJMP _0x2000073
                 _0x2000074:
000310 3040      	CPI  R20,0
000311 f029      	BREQ _0x2000076
000312 5041      	SUBI R20,LOW(1)
000313 e2e0      	LDI  R30,LOW(32)
000314 93ea      	ST   -Y,R30
000315 d081      	RCALL SUBOPT_0x7
000316 cff9      	RJMP _0x2000074
                 _0x2000076:
                 _0x2000073:
                 _0x2000077:
                 _0x2000036:
                 _0x20000D2:
000317 e000      	LDI  R16,LOW(0)
                 _0x2000021:
000318 ceed      	RJMP _0x200001C
                 _0x200001E:
000319 85ac      	LDD  R26,Y+12
00031a 85bd      	LDD  R27,Y+12+1
00031b 91ed      	LD   R30,X+
00031c 91fd      	LD   R31,X+
00031d d090      	RCALL __LOADLOCR6
00031e 9664      	ADIW R28,20
00031f 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
000320 92ff      	PUSH R15
000321 2ef8      	MOV  R15,R24
000322 9726      	SBIW R28,6
000323 d083      	RCALL __SAVELOCR6
000324 01fe      	MOVW R30,R28
                +
000325 2400     +CLR R0
000326 0def     +ADD R30 , R15
000327 1df0     +ADC R31 , R0
                 	__ADDW1R15
                +
000328 8546     +LDD R20 , Z + 14
000329 8557     +LDD R21 , Z + 14 + 1
                 	__GETWRZ 20,21,14
00032a 2e04      	MOV  R0,R20
00032b 2a05      	OR   R0,R21
00032c f419      	BRNE _0x2000078
00032d efef      	LDI  R30,LOW(65535)
00032e efff      	LDI  R31,HIGH(65535)
00032f c023      	RJMP _0x2060001
                 _0x2000078:
000330 01de      	MOVW R26,R28
000331 9618      	ADIW R26,8
                +
000332 2400     +CLR R0
000333 0daf     +ADD R26 , R15
000334 1db0     +ADC R27 , R0
                 	__ADDW2R15
000335 018d      	MOVW R16,R26
                +
000336 8748     +STD Y + 8 , R20
000337 8759     +STD Y + 8 + 1 , R21
                 	__PUTWSR 20,21,8
000338 e0e0      	LDI  R30,LOW(0)
000339 87ea      	STD  Y+10,R30
00033a 87eb      	STD  Y+10+1,R30
00033b 01de      	MOVW R26,R28
00033c 961c      	ADIW R26,12
                +
00033d 2400     +CLR R0
00033e 0daf     +ADD R26 , R15
00033f 1db0     +ADC R27 , R0
                 	__ADDW2R15
000340 91ed      	LD   R30,X+
000341 91fd      	LD   R31,X+
000342 93fa      	ST   -Y,R31
000343 93ea      	ST   -Y,R30
000344 931a      	ST   -Y,R17
000345 930a      	ST   -Y,R16
000346 eced      	LDI  R30,LOW(_put_buff_G100)
000347 e0f1      	LDI  R31,HIGH(_put_buff_G100)
000348 93fa      	ST   -Y,R31
000349 93ea      	ST   -Y,R30
00034a 01de      	MOVW R26,R28
00034b 961c      	ADIW R26,12
00034c deae      	RCALL __print_G100
00034d 019f      	MOVW R18,R30
00034e 85a8      	LDD  R26,Y+8
00034f 85b9      	LDD  R27,Y+8+1
000350 e0e0      	LDI  R30,LOW(0)
000351 93ec      	ST   X,R30
000352 01f9      	MOVW R30,R18
                 _0x2060001:
000353 d05a      	RCALL __LOADLOCR6
000354 962c      	ADIW R28,12
000355 90ff      	POP  R15
000356 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
000357 93ba      	ST   -Y,R27
000358 93aa      	ST   -Y,R26
000359 91a9          ld   r26,y+
00035a 91b9          ld   r27,y+
00035b 27ee          clr  r30
00035c 27ff          clr  r31
                 strlen0:
00035d 916d          ld   r22,x+
00035e 2366          tst  r22
00035f f011          breq strlen1
000360 9631          adiw r30,1
000361 cffb          rjmp strlen0
                 strlen1:
000362 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000363 93ba      	ST   -Y,R27
000364 93aa      	ST   -Y,R26
000365 27aa          clr  r26
000366 27bb          clr  r27
000367 91e9          ld   r30,y+
000368 91f9          ld   r31,y+
                 strlenf0:
000369 9005      	lpm  r0,z+
00036a 2000          tst  r0
00036b f011          breq strlenf1
00036c 9611          adiw r26,1
00036d cffb          rjmp strlenf0
                 strlenf1:
00036e 01fd          movw r30,r26
00036f 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _cursor:
000300           	.BYTE 0x1
                 _i:
000301           	.BYTE 0x1
                 _H:
000302           	.BYTE 0x1
                 _M:
000303           	.BYTE 0x1
                 _S:
000304           	.BYTE 0x1
                 _Cadena:
000305           	.BYTE 0x11
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x0:
000370 d05c      	RCALL __CBD1
000371 d065      	RCALL __PUTPARD1
000372 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1:
000373 91e0 0303 	LDS  R30,_M
000375 5fef      	SUBI R30,-LOW(1)
000376 93e0 0303 	STS  _M,R30
000378 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2:
000379 91e0 0302 	LDS  R30,_H
00037b 5fef      	SUBI R30,-LOW(1)
00037c 93e0 0302 	STS  _H,R30
00037e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
00037f 9614      	ADIW R26,4
                +
000380 91ed     +LD R30 , X +
000381 91fc     +LD R31 , X
000382 9711     +SBIW R26 , 1
                 	__GETW1P
000383 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4:
000384 91ed      	LD   R30,X+
000385 91fd      	LD   R31,X+
000386 9631      	ADIW R30,1
000387 93fe      	ST   -X,R31
000388 93ee      	ST   -X,R30
000389 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x5:
00038a 933a      	ST   -Y,R19
00038b 85ad      	LDD  R26,Y+13
00038c 85be      	LDD  R27,Y+13+1
00038d 85ef      	LDD  R30,Y+15
00038e 89f8      	LDD  R31,Y+15+1
00038f 9509      	ICALL
000390 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x6:
000391 89e8      	LDD  R30,Y+16
000392 89f9      	LDD  R31,Y+16+1
000393 9734      	SBIW R30,4
000394 8be8      	STD  Y+16,R30
000395 8bf9      	STD  Y+16+1,R31
000396 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x7:
000397 85ad      	LDD  R26,Y+13
000398 85be      	LDD  R27,Y+13+1
000399 85ef      	LDD  R30,Y+15
00039a 89f8      	LDD  R31,Y+15+1
00039b 9509      	ICALL
00039c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x8:
00039d 89a8      	LDD  R26,Y+16
00039e 89b9      	LDD  R27,Y+16+1
00039f 9614      	ADIW R26,4
0003a0 91ed      	LD   R30,X+
0003a1 91fd      	LD   R31,X+
0003a2 83ee      	STD  Y+6,R30
0003a3 83ff      	STD  Y+6+1,R31
0003a4 81ae      	LDD  R26,Y+6
0003a5 81bf      	LDD  R27,Y+6+1
0003a6 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
0003a7 935a      	ST   -Y,R21
                 __SAVELOCR5:
0003a8 934a      	ST   -Y,R20
                 __SAVELOCR4:
0003a9 933a      	ST   -Y,R19
                 __SAVELOCR3:
0003aa 932a      	ST   -Y,R18
                 __SAVELOCR2:
0003ab 931a      	ST   -Y,R17
0003ac 930a      	ST   -Y,R16
0003ad 9508      	RET
                 
                 __LOADLOCR6:
0003ae 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0003af 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0003b0 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0003b1 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0003b2 8119      	LDD  R17,Y+1
0003b3 8108      	LD   R16,Y
0003b4 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
0003b5 93af      	PUSH R26
0003b6 93bf      	PUSH R27
0003b7 01db      	MOVW R26,R22
0003b8 0fac      	ADD  R26,R28
0003b9 1fbd      	ADC  R27,R29
                 __INITLOC0:
0003ba 9005      	LPM  R0,Z+
0003bb 920d      	ST   X+,R0
0003bc 958a      	DEC  R24
0003bd f7e1      	BRNE __INITLOC0
0003be 91bf      	POP  R27
0003bf 91af      	POP  R26
0003c0 9508      	RET
                 
                 __ANEGW1:
0003c1 95f1      	NEG  R31
0003c2 95e1      	NEG  R30
0003c3 40f0      	SBCI R31,0
0003c4 9508      	RET
                 
                 __ANEGD1:
0003c5 95f0      	COM  R31
0003c6 9560      	COM  R22
0003c7 9570      	COM  R23
0003c8 95e1      	NEG  R30
0003c9 4fff      	SBCI R31,-1
0003ca 4f6f      	SBCI R22,-1
0003cb 4f7f      	SBCI R23,-1
0003cc 9508      	RET
                 
                 __CBD1:
0003cd 2ffe      	MOV  R31,R30
0003ce 0fff      	ADD  R31,R31
0003cf 0bff      	SBC  R31,R31
0003d0 2f6f      	MOV  R22,R31
0003d1 2f7f      	MOV  R23,R31
0003d2 9508      	RET
                 
                 __GETW1PF:
0003d3 9005      	LPM  R0,Z+
0003d4 91f4      	LPM  R31,Z
0003d5 2de0      	MOV  R30,R0
0003d6 9508      	RET
                 
                 __PUTPARD1:
0003d7 937a      	ST   -Y,R23
0003d8 936a      	ST   -Y,R22
0003d9 93fa      	ST   -Y,R31
0003da 93ea      	ST   -Y,R30
0003db 9508      	RET
                 
                 __PUTPARD2:
0003dc 939a      	ST   -Y,R25
0003dd 938a      	ST   -Y,R24
0003de 93ba      	ST   -Y,R27
0003df 93aa      	ST   -Y,R26
0003e0 9508      	RET
                 
                 __SWAPD12:
0003e1 2e18      	MOV  R1,R24
0003e2 2f86      	MOV  R24,R22
0003e3 2d61      	MOV  R22,R1
0003e4 2e19      	MOV  R1,R25
0003e5 2f97      	MOV  R25,R23
0003e6 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
0003e7 2e1b      	MOV  R1,R27
0003e8 2fbf      	MOV  R27,R31
0003e9 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
0003ea 2e1a      	MOV  R1,R26
0003eb 2fae      	MOV  R26,R30
0003ec 2de1      	MOV  R30,R1
0003ed 9508      	RET
                 
                 __ROUND_REPACK:
0003ee 2355      	TST  R21
0003ef f442      	BRPL __REPACK
0003f0 3850      	CPI  R21,0x80
0003f1 f411      	BRNE __ROUND_REPACK0
0003f2 ffe0      	SBRS R30,0
0003f3 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
0003f4 9631      	ADIW R30,1
0003f5 1f69      	ADC  R22,R25
0003f6 1f79      	ADC  R23,R25
0003f7 f06b      	BRVS __REPACK1
                 
                 __REPACK:
0003f8 e850      	LDI  R21,0x80
0003f9 2757      	EOR  R21,R23
0003fa f411      	BRNE __REPACK0
0003fb 935f      	PUSH R21
0003fc c0ca      	RJMP __ZERORES
                 __REPACK0:
0003fd 3f5f      	CPI  R21,0xFF
0003fe f031      	BREQ __REPACK1
0003ff 0f66      	LSL  R22
000400 0c00      	LSL  R0
000401 9557      	ROR  R21
000402 9567      	ROR  R22
000403 2f75      	MOV  R23,R21
000404 9508      	RET
                 __REPACK1:
000405 935f      	PUSH R21
000406 2000      	TST  R0
000407 f00a      	BRMI __REPACK2
000408 c0c9      	RJMP __MAXRES
                 __REPACK2:
000409 c0c2      	RJMP __MINRES
                 
                 __UNPACK:
00040a e850      	LDI  R21,0x80
00040b 2e19      	MOV  R1,R25
00040c 2215      	AND  R1,R21
00040d 0f88      	LSL  R24
00040e 1f99      	ROL  R25
00040f 2795      	EOR  R25,R21
000410 0f55      	LSL  R21
000411 9587      	ROR  R24
                 
                 __UNPACK1:
000412 e850      	LDI  R21,0x80
000413 2e07      	MOV  R0,R23
000414 2205      	AND  R0,R21
000415 0f66      	LSL  R22
000416 1f77      	ROL  R23
000417 2775      	EOR  R23,R21
000418 0f55      	LSL  R21
000419 9567      	ROR  R22
00041a 9508      	RET
                 
                 __CFD1U:
00041b 9468      	SET
00041c c001      	RJMP __CFD1U0
                 __CFD1:
00041d 94e8      	CLT
                 __CFD1U0:
00041e 935f      	PUSH R21
00041f dff2      	RCALL __UNPACK1
000420 3870      	CPI  R23,0x80
000421 f018      	BRLO __CFD10
000422 3f7f      	CPI  R23,0xFF
000423 f408      	BRCC __CFD10
000424 c0a2      	RJMP __ZERORES
                 __CFD10:
000425 e156      	LDI  R21,22
000426 1b57      	SUB  R21,R23
000427 f4aa      	BRPL __CFD11
000428 9551      	NEG  R21
000429 3058      	CPI  R21,8
00042a f40e      	BRTC __CFD19
00042b 3059      	CPI  R21,9
                 __CFD19:
00042c f030      	BRLO __CFD17
00042d efef      	SER  R30
00042e efff      	SER  R31
00042f ef6f      	SER  R22
000430 e77f      	LDI  R23,0x7F
000431 f977      	BLD  R23,7
000432 c01a      	RJMP __CFD15
                 __CFD17:
000433 2777      	CLR  R23
000434 2355      	TST  R21
000435 f0b9      	BREQ __CFD15
                 __CFD18:
000436 0fee      	LSL  R30
000437 1fff      	ROL  R31
000438 1f66      	ROL  R22
000439 1f77      	ROL  R23
00043a 955a      	DEC  R21
00043b f7d1      	BRNE __CFD18
00043c c010      	RJMP __CFD15
                 __CFD11:
00043d 2777      	CLR  R23
                 __CFD12:
00043e 3058      	CPI  R21,8
00043f f028      	BRLO __CFD13
000440 2fef      	MOV  R30,R31
000441 2ff6      	MOV  R31,R22
000442 2f67      	MOV  R22,R23
000443 5058      	SUBI R21,8
000444 cff9      	RJMP __CFD12
                 __CFD13:
000445 2355      	TST  R21
000446 f031      	BREQ __CFD15
                 __CFD14:
000447 9576      	LSR  R23
000448 9567      	ROR  R22
000449 95f7      	ROR  R31
00044a 95e7      	ROR  R30
00044b 955a      	DEC  R21
00044c f7d1      	BRNE __CFD14
                 __CFD15:
00044d 2000      	TST  R0
00044e f40a      	BRPL __CFD16
00044f df75      	RCALL __ANEGD1
                 __CFD16:
000450 915f      	POP  R21
000451 9508      	RET
                 
                 __CDF1U:
000452 9468      	SET
000453 c001      	RJMP __CDF1U0
                 __CDF1:
000454 94e8      	CLT
                 __CDF1U0:
000455 9730      	SBIW R30,0
000456 4060      	SBCI R22,0
000457 4070      	SBCI R23,0
000458 f0b1      	BREQ __CDF10
000459 2400      	CLR  R0
00045a f026      	BRTS __CDF11
00045b 2377      	TST  R23
00045c f412      	BRPL __CDF11
00045d 9400      	COM  R0
00045e df66      	RCALL __ANEGD1
                 __CDF11:
00045f 2e17      	MOV  R1,R23
000460 e17e      	LDI  R23,30
000461 2011      	TST  R1
                 __CDF12:
000462 f032      	BRMI __CDF13
000463 957a      	DEC  R23
000464 0fee      	LSL  R30
000465 1fff      	ROL  R31
000466 1f66      	ROL  R22
000467 1c11      	ROL  R1
000468 cff9      	RJMP __CDF12
                 __CDF13:
000469 2fef      	MOV  R30,R31
00046a 2ff6      	MOV  R31,R22
00046b 2d61      	MOV  R22,R1
00046c 935f      	PUSH R21
00046d df8a      	RCALL __REPACK
00046e 915f      	POP  R21
                 __CDF10:
00046f 9508      	RET
                 
                 __SWAPACC:
000470 934f      	PUSH R20
000471 01af      	MOVW R20,R30
000472 01fd      	MOVW R30,R26
000473 01da      	MOVW R26,R20
000474 01ab      	MOVW R20,R22
000475 01bc      	MOVW R22,R24
000476 01ca      	MOVW R24,R20
000477 2d40      	MOV  R20,R0
000478 2c01      	MOV  R0,R1
000479 2e14      	MOV  R1,R20
00047a 914f      	POP  R20
00047b 9508      	RET
                 
                 __UADD12:
00047c 0fea      	ADD  R30,R26
00047d 1ffb      	ADC  R31,R27
00047e 1f68      	ADC  R22,R24
00047f 9508      	RET
                 
                 __NEGMAN1:
000480 95e0      	COM  R30
000481 95f0      	COM  R31
000482 9560      	COM  R22
000483 5fef      	SUBI R30,-1
000484 4fff      	SBCI R31,-1
000485 4f6f      	SBCI R22,-1
000486 9508      	RET
                 
                 __SUBF12:
000487 935f      	PUSH R21
000488 df81      	RCALL __UNPACK
000489 3890      	CPI  R25,0x80
00048a f149      	BREQ __ADDF129
00048b e850      	LDI  R21,0x80
00048c 2615      	EOR  R1,R21
                 
                 __ADDF120:
00048d 3870      	CPI  R23,0x80
00048e f121      	BREQ __ADDF128
                 __ADDF121:
00048f 2f57      	MOV  R21,R23
000490 1b59      	SUB  R21,R25
000491 f12b      	BRVS __ADDF1211
000492 f412      	BRPL __ADDF122
000493 dfdc      	RCALL __SWAPACC
000494 cffa      	RJMP __ADDF121
                 __ADDF122:
000495 3158      	CPI  R21,24
000496 f018      	BRLO __ADDF123
000497 27aa      	CLR  R26
000498 27bb      	CLR  R27
000499 2788      	CLR  R24
                 __ADDF123:
00049a 3058      	CPI  R21,8
00049b f028      	BRLO __ADDF124
00049c 2fab      	MOV  R26,R27
00049d 2fb8      	MOV  R27,R24
00049e 2788      	CLR  R24
00049f 5058      	SUBI R21,8
0004a0 cff9      	RJMP __ADDF123
                 __ADDF124:
0004a1 2355      	TST  R21
0004a2 f029      	BREQ __ADDF126
                 __ADDF125:
0004a3 9586      	LSR  R24
0004a4 95b7      	ROR  R27
0004a5 95a7      	ROR  R26
0004a6 955a      	DEC  R21
0004a7 f7d9      	BRNE __ADDF125
                 __ADDF126:
0004a8 2d50      	MOV  R21,R0
0004a9 2551      	EOR  R21,R1
0004aa f072      	BRMI __ADDF127
0004ab dfd0      	RCALL __UADD12
0004ac f438      	BRCC __ADDF129
0004ad 9567      	ROR  R22
0004ae 95f7      	ROR  R31
0004af 95e7      	ROR  R30
0004b0 9573      	INC  R23
0004b1 f413      	BRVC __ADDF129
0004b2 c01f      	RJMP __MAXRES
                 __ADDF128:
0004b3 dfbc      	RCALL __SWAPACC
                 __ADDF129:
0004b4 df43      	RCALL __REPACK
0004b5 915f      	POP  R21
0004b6 9508      	RET
                 __ADDF1211:
0004b7 f7d8      	BRCC __ADDF128
0004b8 cffb      	RJMP __ADDF129
                 __ADDF127:
0004b9 1bea      	SUB  R30,R26
0004ba 0bfb      	SBC  R31,R27
0004bb 0b68      	SBC  R22,R24
0004bc f051      	BREQ __ZERORES
0004bd f410      	BRCC __ADDF1210
0004be 9400      	COM  R0
0004bf dfc0      	RCALL __NEGMAN1
                 __ADDF1210:
0004c0 2366      	TST  R22
0004c1 f392      	BRMI __ADDF129
0004c2 0fee      	LSL  R30
0004c3 1fff      	ROL  R31
0004c4 1f66      	ROL  R22
0004c5 957a      	DEC  R23
0004c6 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
0004c7 27ee      	CLR  R30
0004c8 27ff      	CLR  R31
0004c9 01bf      	MOVW R22,R30
0004ca 915f      	POP  R21
0004cb 9508      	RET
                 
                 __MINRES:
0004cc efef      	SER  R30
0004cd efff      	SER  R31
0004ce e76f      	LDI  R22,0x7F
0004cf ef7f      	SER  R23
0004d0 915f      	POP  R21
0004d1 9508      	RET
                 
                 __MAXRES:
0004d2 efef      	SER  R30
0004d3 efff      	SER  R31
0004d4 e76f      	LDI  R22,0x7F
0004d5 e77f      	LDI  R23,0x7F
0004d6 915f      	POP  R21
0004d7 9508      	RET
                 
                 __DIVF21:
0004d8 935f      	PUSH R21
0004d9 df30      	RCALL __UNPACK
0004da 3870      	CPI  R23,0x80
0004db f421      	BRNE __DIVF210
0004dc 2011      	TST  R1
                 __DIVF211:
0004dd f40a      	BRPL __DIVF219
0004de cfed      	RJMP __MINRES
                 __DIVF219:
0004df cff2      	RJMP __MAXRES
                 __DIVF210:
0004e0 3890      	CPI  R25,0x80
0004e1 f409      	BRNE __DIVF218
                 __DIVF217:
0004e2 cfe4      	RJMP __ZERORES
                 __DIVF218:
0004e3 2401      	EOR  R0,R1
0004e4 9408      	SEC
0004e5 0b97      	SBC  R25,R23
0004e6 f41b      	BRVC __DIVF216
0004e7 f3d4      	BRLT __DIVF217
0004e8 2000      	TST  R0
0004e9 cff3      	RJMP __DIVF211
                 __DIVF216:
0004ea 2f79      	MOV  R23,R25
0004eb 931f      	PUSH R17
0004ec 932f      	PUSH R18
0004ed 933f      	PUSH R19
0004ee 934f      	PUSH R20
0004ef 2411      	CLR  R1
0004f0 2711      	CLR  R17
0004f1 2722      	CLR  R18
0004f2 2733      	CLR  R19
0004f3 01a9      	MOVW R20,R18
0004f4 e290      	LDI  R25,32
                 __DIVF212:
0004f5 17ae      	CP   R26,R30
0004f6 07bf      	CPC  R27,R31
0004f7 0786      	CPC  R24,R22
0004f8 0741      	CPC  R20,R17
0004f9 f030      	BRLO __DIVF213
0004fa 1bae      	SUB  R26,R30
0004fb 0bbf      	SBC  R27,R31
0004fc 0b86      	SBC  R24,R22
0004fd 0b41      	SBC  R20,R17
0004fe 9408      	SEC
0004ff c001      	RJMP __DIVF214
                 __DIVF213:
000500 9488      	CLC
                 __DIVF214:
000501 1f55      	ROL  R21
000502 1f22      	ROL  R18
000503 1f33      	ROL  R19
000504 1c11      	ROL  R1
000505 1faa      	ROL  R26
000506 1fbb      	ROL  R27
000507 1f88      	ROL  R24
000508 1f44      	ROL  R20
000509 959a      	DEC  R25
00050a f751      	BRNE __DIVF212
00050b 01f9      	MOVW R30,R18
00050c 2d61      	MOV  R22,R1
00050d 914f      	POP  R20
00050e 913f      	POP  R19
00050f 912f      	POP  R18
000510 911f      	POP  R17
000511 2366      	TST  R22
000512 f032      	BRMI __DIVF215
000513 0f55      	LSL  R21
000514 1fee      	ROL  R30
000515 1fff      	ROL  R31
000516 1f66      	ROL  R22
000517 957a      	DEC  R23
000518 f24b      	BRVS __DIVF217
                 __DIVF215:
000519 ded4      	RCALL __ROUND_REPACK
00051a 915f      	POP  R21
00051b 9508      	RET
                 
                 __CMPF12:
00051c 2399      	TST  R25
00051d f09a      	BRMI __CMPF120
00051e 2377      	TST  R23
00051f f042      	BRMI __CMPF121
000520 1797      	CP   R25,R23
000521 f048      	BRLO __CMPF122
000522 f429      	BRNE __CMPF121
000523 17ae      	CP   R26,R30
000524 07bf      	CPC  R27,R31
000525 0786      	CPC  R24,R22
000526 f020      	BRLO __CMPF122
000527 f031      	BREQ __CMPF123
                 __CMPF121:
000528 9498      	CLZ
000529 9488      	CLC
00052a 9508      	RET
                 __CMPF122:
00052b 9498      	CLZ
00052c 9408      	SEC
00052d 9508      	RET
                 __CMPF123:
00052e 9418      	SEZ
00052f 9488      	CLC
000530 9508      	RET
                 __CMPF120:
000531 2377      	TST  R23
000532 f7c2      	BRPL __CMPF122
000533 1797      	CP   R25,R23
000534 f398      	BRLO __CMPF121
000535 f7a9      	BRNE __CMPF122
000536 17ea      	CP   R30,R26
000537 07fb      	CPC  R31,R27
000538 0768      	CPC  R22,R24
000539 f388      	BRLO __CMPF122
00053a f399      	BREQ __CMPF123
00053b cfec      	RJMP __CMPF121
                 
                 _delay_ms:
00053c 9610      	adiw r26,0
00053d f039      	breq __delay_ms1
                 __delay_ms0:
00053e 95a8      	wdr
                +
00053f ef8a     +LDI R24 , LOW ( 0xFA )
000540 e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
000541 9701     +SBIW R24 , 1
000542 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
000543 9711      	sbiw r26,1
000544 f7c9      	brne __delay_ms0
                 __delay_ms1:
000545 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega328P register use summary:
r0 :  28 r1 :  23 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   6 
r16:  57 r17:  53 r18:  25 r19:  31 r20:  36 r21:  64 r22:  48 r23:  46 
r24:  32 r25:  23 r26: 136 r27:  55 r28:  18 r29:   2 r30: 224 r31: 103 
x  :  32 y  : 156 z  :  11 
Registers used: 22 out of 35 (62.9%)

ATmega328P instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  11 add   :  10 
adiw  :  24 and   :   2 andi  :   7 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   4 brcs  :   0 break :   0 breq  :  24 
brge  :   2 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  18 
brlt  :   3 brmi  :   8 brne  :  43 brpl  :   8 brsh  :   3 brtc  :   1 
brts  :   1 brvc  :   3 brvs  :   3 bset  :   0 bst   :   0 call  :   0 
cbi   :   7 cbr   :   0 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  25 cls   :   0 clt   :   2 clv   :   0 clz   :   2 com   :   8 
cp    :   8 cpc   :  12 cpi   :  57 cpse  :   0 dec   :   9 des   :   0 
eor   :   6 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   0 inc   :   1 jmp   :  27 ld    :  29 ldd   :  72 ldi   : 118 
lds   :  19 lpm   :   8 lsl   :  10 lsr   :   2 mov   :  68 movw  :  31 
mul   :   1 muls  :   0 mulsu :   0 neg   :   4 nop   :   0 or    :   1 
ori   :   6 out   :  12 pop   :  15 push  :  14 rcall :  80 ret   :  47 
reti  :   0 rjmp  :  98 rol   :  21 ror   :  12 sbc   :   8 sbci  :   9 
sbi   :  14 sbic  :   5 sbis  :   1 sbiw  :  20 sbr   :   0 sbrc  :   2 
sbrs  :  15 sec   :   3 seh   :   0 sei   :   0 sen   :   0 ser   :   8 
ses   :   0 set   :   2 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    :  58 std   :  34 sts   :  16 sub   :   5 subi  :  30 swap  :   1 
tst   :  19 wdr   :   1 
Instructions used: 75 out of 116 (64.7%)

ATmega328P memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000a8c   2652     48   2700   32768   8.2%
[.dseg] 0x000100 0x000316      0     22     22    2048   1.1%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 1 warnings
