
AVRASM ver. 2.1.30  C:\ChipAVR\Ejercicio_Serial\Debug\List\Ejercicio_Serial.asm Mon May 27 10:09:03 2024

                 
                 
                 ;CodeVisionAVR C Compiler V4.02 Evaluation
                 ;(C) Copyright 1998-2024 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega328P
                 ;Program type           : Application
                 ;Clock frequency        : 1.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: Off
                 ;Smart register allocation: Off
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega328P
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU SPMCSR=0x37
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x08FF
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.EQU __FLASH_PAGE_SIZE=0x40
                 	.EQU __EEPROM_PAGE_SIZE=0x04
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0043 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
000034 2710
000035 03e8
000036 0064
000037 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000038 0001      	.DB  0x1,0x0
                 _tbl16_G100:
000039 1000
00003a 0100
00003b 0010
00003c 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
00003d 6925
00003e 252e
00003f 2069
000040 6325      	.DB  0x25,0x69,0x2E,0x25,0x69,0x20,0x25,0x63
000041 0a20
000042 000d      	.DB  0x20,0xA,0xD,0x0
                 __RESET:
000043 94f8      	CLI
                 
000044 27ee      	CLR  R30
000045 bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000046 e0f1      	LDI  R31,1
000047 bff5      	OUT  MCUCR,R31
000048 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000049 e08d      	LDI  R24,(14-2)+1
00004a e0a2      	LDI  R26,2
00004b 27bb      	CLR  R27
                 __CLEAR_REG:
00004c 93ed      	ST   X+,R30
00004d 958a      	DEC  R24
00004e f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00004f e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000050 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000051 e0a0      	LDI  R26,LOW(__SRAM_START)
000052 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000053 93ed      	ST   X+,R30
000054 9701      	SBIW R24,1
000055 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GPIOR0 INITIALIZATION
000056 e0e0      	LDI  R30,__GPIOR0_INIT
000057 bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000058 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000059 bfed      	OUT  SPL,R30
00005a e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00005b bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00005c e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00005d e0d3      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00005e 940c 007c 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x300
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0000 0012 {
                 
                 	.CSEG
                 _read_adc:
                 ; .FSTART _read_adc
                 ; 0000 0013 ADMUX=adc_input | ADC_VREF_TYPE;
000060 930a      	ST   -Y,R16
000061 2f0a      	MOV  R16,R26
                 ;	adc_input -> R16
000062 2fe0      	MOV  R30,R16
000063 64e0      	ORI  R30,0x40
000064 93e0 007c 	STS  124,R30
                 ; 0000 0014 // Delay needed for the stabilization of the ADC input voltage
                 ; 0000 0015 delay_us(10);
                +
000066 e083     +LDI R24 , LOW ( 3 )
                +__DELAY_USB_LOOP :
000067 958a     +DEC R24
000068 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 3
                 ; 0000 0016 // Start the AD conversion
                 ; 0000 0017 ADCSRA|=(1<<ADSC);
000069 91e0 007a 	LDS  R30,122
00006b 64e0      	ORI  R30,0x40
00006c 93e0 007a 	STS  122,R30
                 ; 0000 0018 // Wait for the AD conversion to complete
                 ; 0000 0019 while ((ADCSRA & (1<<ADIF))==0);
                 _0x3:
00006e 91e0 007a 	LDS  R30,122
000070 71e0      	ANDI R30,LOW(0x10)
000071 f3e1      	BREQ _0x3
                 ; 0000 001A ADCSRA|=(1<<ADIF);
000072 91e0 007a 	LDS  R30,122
000074 61e0      	ORI  R30,0x10
000075 93e0 007a 	STS  122,R30
                 ; 0000 001B return ADCW;
000077 91e0 0078 	LDS  R30,120
000079 91f0 0079 	LDS  R31,120+1
00007b c077      	RJMP _0x2060001
                 ; 0000 001C }
                 ; .FEND
                 ;void main(void)
                 ; 0000 0026 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0027 
                 ; 0000 0028 // Verifirico apoyandonos del code Wizard, linea de la 141 a la 150
                 ; 0000 0029 // ADC initialization
                 ; 0000 002A // ADC Clock frequency: 125.000 kHz
                 ; 0000 002B // ADC Auto Trigger Source: Software
                 ; 0000 002C ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
00007c e8e3      	LDI  R30,LOW(131)
00007d 93e0 007a 	STS  122,R30
                 ; 0000 002D ADCSRB=(0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
00007f e0e0      	LDI  R30,LOW(0)
000080 93e0 007b 	STS  123,R30
                 ; 0000 002E // Digital input buffers on ADC0: On, ADC1: On, ADC2: On, ADC3: On
                 ; 0000 002F // ADC4: On, ADC5: Off
                 ; 0000 0030 DIDR0=(1<<ADC5D) | (0<<ADC4D) | (0<<ADC3D) | (0<<ADC2D) | (0<<ADC1D) | (0<<ADC0D);
000082 e2e0      	LDI  R30,LOW(32)
000083 93e0 007e 	STS  126,R30
                 ; 0000 0031 
                 ; 0000 0032 
                 ; 0000 0033 // USART initialization
                 ; 0000 0034 // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 0035 // USART Receiver: On
                 ; 0000 0036 // USART Transmitter: On
                 ; 0000 0037 // USART Mode: Asynchronous
                 ; 0000 0038 // USART Baud Rate: 9600 (Double Speed Mode)
                 ; 0000 0039 UCSR0A=(0<<RXC0) | (0<<TXC0) | (0<<UDRE0) | (0<<FE0) | (0<<DOR0) | (0<<UPE0) | (1<<U2X0) | (0<<MPCM0);
000085 e0e2      	LDI  R30,LOW(2)
000086 93e0 00c0 	STS  192,R30
                 ; 0000 003A UCSR0B=(0<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (1<<RXEN0) | (1<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
000088 e1e8      	LDI  R30,LOW(24)
000089 93e0 00c1 	STS  193,R30
                 ; 0000 003B UCSR0C=(0<<UMSEL01) | (0<<UMSEL00) | (0<<UPM01) | (0<<UPM00) | (0<<USBS0) | (1<<UCSZ01) | (1<<UCSZ00) | (0<<UCPOL0);
00008b e0e6      	LDI  R30,LOW(6)
00008c 93e0 00c2 	STS  194,R30
                 ; 0000 003C UBRR0H=0x00;
00008e e0e0      	LDI  R30,LOW(0)
00008f 93e0 00c5 	STS  197,R30
                 ; 0000 003D UBRR0L=0x0C;
000091 e0ec      	LDI  R30,LOW(12)
000092 93e0 00c4 	STS  196,R30
                 ; 0000 003E 
                 ; 0000 003F while (1)
                 _0x6:
                 ; 0000 0040 {
                 ; 0000 0041 voltDigital = read_adc(5);                          // Read the AD conversion result pin 5
000094 e0a5      	LDI  R26,LOW(5)
000095 dfca      	RCALL _read_adc
000096 93e0 0304 	STS  _voltDigital,R30
000098 93f0 0305 	STS  _voltDigital+1,R31
                 ; 0000 0042 volt = (voltDigital * 100.0) / 1024.0;              // Convert the result to voltage (digital)
00009a 2766      	CLR  R22
00009b 2777      	CLR  R23
00009c d2a8      	RCALL __CDF1
                +
00009d e0a0     +LDI R26 , LOW ( 0x42C80000 )
00009e e0b0     +LDI R27 , HIGH ( 0x42C80000 )
00009f ec88     +LDI R24 , BYTE3 ( 0x42C80000 )
0000a0 e492     +LDI R25 , BYTE4 ( 0x42C80000 )
                 	__GETD2N 0x42C80000
0000a1 d32c      	RCALL __MULF12
0000a2 01df      	MOVW R26,R30
0000a3 01cb      	MOVW R24,R22
                +
0000a4 e0e0     +LDI R30 , LOW ( 0x44800000 )
0000a5 e0f0     +LDI R31 , HIGH ( 0x44800000 )
0000a6 e860     +LDI R22 , BYTE3 ( 0x44800000 )
0000a7 e474     +LDI R23 , BYTE4 ( 0x44800000 )
                 	__GETD1N 0x44800000
0000a8 d373      	RCALL __DIVF21
0000a9 d1c1      	RCALL SUBOPT_0x0
                 ; 0000 0043 // Ejemplo 1: 20.56°C   Ejemplo 2: 20.98°C
                 ; 0000 0044 voltEnt = volt;                                     // Extract the integer part
0000aa d1c9      	RCALL SUBOPT_0x1
0000ab e0a6      	LDI  R26,LOW(_voltEnt)
0000ac e0b3      	LDI  R27,HIGH(_voltEnt)
0000ad d25e      	RCALL __CFD1U
0000ae 93ec      	ST   X,R30
                 ; 0000 0045 // Ejemplo 1: 20        Ejemplo 2: 20
                 ; 0000 0046 volt = volt - voltEnt;                       // Extract the decimal part
0000af 91e0 0306 	LDS  R30,_voltEnt
0000b1 e0f0      	LDI  R31,0
0000b2 d1ca      	RCALL SUBOPT_0x2
                +
0000b3 2f6f     +MOV R22 , R31
0000b4 0f66     +ADD R22 , R22
0000b5 0b66     +SBC R22 , R22
0000b6 2f76     +MOV R23 , R22
                 	__CWD1
0000b7 d28d      	RCALL __CDF1
0000b8 d219      	RCALL __SWAPD12
0000b9 d2be      	RCALL __SUBF12
0000ba d1cb      	RCALL SUBOPT_0x3
                 ; 0000 0047 // Ejemplo 1: 0.56      Ejemplo 2: 0.98
                 ; 0000 0048 volt = volt * 10;
0000bb d312      	RCALL __MULF12
0000bc d1ae      	RCALL SUBOPT_0x0
                 ; 0000 0049 // Ejemplo 1: 5.6       Ejemplo 2: 9.8
                 ; 0000 004A volt = volt + .5;                                  // Round the decimal part
0000bd d1b6      	RCALL SUBOPT_0x1
                +
0000be e0a0     +LDI R26 , LOW ( 0x3F000000 )
0000bf e0b0     +LDI R27 , HIGH ( 0x3F000000 )
0000c0 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
0000c1 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
0000c2 d2bc      	RCALL __ADDF12
0000c3 d1c2      	RCALL SUBOPT_0x3
                 ; 0000 004B // Ejemplo 1: 6.1         Ejemplo 2: 10.3
                 ; 0000 004C if (volt<10)
0000c4 d39b      	RCALL __CMPF12
0000c5 f430      	BRSH _0x9
                 ; 0000 004D voltDec = volt;                                   // Extract the decimal part
0000c6 d1ad      	RCALL SUBOPT_0x1
0000c7 e0a7      	LDI  R26,LOW(_voltDec)
0000c8 e0b3      	LDI  R27,HIGH(_voltDec)
0000c9 d242      	RCALL __CFD1U
0000ca 93ec      	ST   X,R30
                 ; 0000 004E else{
0000cb c008      	RJMP _0xA
                 _0x9:
                 ; 0000 004F voltDec = 0;
0000cc e0e0      	LDI  R30,LOW(0)
0000cd 93e0 0307 	STS  _voltDec,R30
                 ; 0000 0050 voltEnt++;                                        // Increase the integer part
0000cf 91e0 0306 	LDS  R30,_voltEnt
0000d1 5fef      	SUBI R30,-LOW(1)
0000d2 93e0 0306 	STS  _voltEnt,R30
                 ; 0000 0051 }
                 _0xA:
                 ; 0000 0052 
                 ; 0000 0053 //sprintf(Cadena, "%0i.%i %\n\r", voltEnt, voltDec);     // Print the result, 0XDF -> "�"
                 ; 0000 0054 printf("%i.%i %c \n\r", voltEnt, voltDec, 0x25);
                +
0000d4 e7ea     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0000d5 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0000d6 93fa      	ST   -Y,R31
0000d7 93ea      	ST   -Y,R30
0000d8 91e0 0306 	LDS  R30,_voltEnt
0000da d1b2      	RCALL SUBOPT_0x4
0000db 91e0 0307 	LDS  R30,_voltDec
0000dd d1af      	RCALL SUBOPT_0x4
                +
0000de e2e5     +LDI R30 , LOW ( 0x25 )
0000df e0f0     +LDI R31 , HIGH ( 0x25 )
0000e0 e060     +LDI R22 , BYTE3 ( 0x25 )
0000e1 e070     +LDI R23 , BYTE4 ( 0x25 )
                 	__GETD1N 0x25
0000e2 d1ea      	RCALL __PUTPARD1
0000e3 e08c      	LDI  R24,12
0000e4 d146      	RCALL _printf
0000e5 962e      	ADIW R28,14
                 ; 0000 0055 delay_ms(1000);
0000e6 eea8      	LDI  R26,LOW(1000)
0000e7 e0b3      	LDI  R27,HIGH(1000)
0000e8 d397      	RCALL _delay_ms
                 ; 0000 0056 }
0000e9 cfaa      	RJMP _0x6
                 ; 0000 0057 }
                 _0xB:
0000ea cfff      	RJMP _0xB
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _putchar:
                 ; .FSTART _putchar
0000eb 930a      	ST   -Y,R16
0000ec 2f0a      	MOV  R16,R26
                 _0x2000006:
0000ed 91e0 00c0 	LDS  R30,192
0000ef 72e0      	ANDI R30,LOW(0x20)
0000f0 f3e1      	BREQ _0x2000006
0000f1 9300 00c6 	STS  198,R16
                 _0x2060001:
0000f3 9109      	LD   R16,Y+
0000f4 9508      	RET
                 ; .FEND
                 _put_usart_G100:
                 ; .FSTART _put_usart_G100
0000f5 d1bc      	RCALL __SAVELOCR3
0000f6 018d      	MOVW R16,R26
0000f7 812b      	LDD  R18,Y+3
0000f8 2fa2      	MOV  R26,R18
0000f9 dff1      	RCALL _putchar
0000fa 01d8      	MOVW R26,R16
0000fb 91ed      	LD   R30,X+
0000fc 91fd      	LD   R31,X+
0000fd 9631      	ADIW R30,1
0000fe 93fe      	ST   -X,R31
0000ff 93ee      	ST   -X,R30
000100 d1b8      	RCALL __LOADLOCR3
000101 9624      	ADIW R28,4
000102 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
000103 93ba      	ST   -Y,R27
000104 93aa      	ST   -Y,R26
000105 9726      	SBIW R28,6
000106 d1a8      	RCALL __SAVELOCR6
000107 e000      	LDI  R16,0
000108 85ac      	LDD  R26,Y+12
000109 85bd      	LDD  R27,Y+12+1
00010a e0e0      	LDI  R30,LOW(0)
00010b e0f0      	LDI  R31,HIGH(0)
00010c 93ed      	ST   X+,R30
00010d 93fc      	ST   X,R31
                 _0x200001C:
00010e 89ea      	LDD  R30,Y+18
00010f 89fb      	LDD  R31,Y+18+1
000110 9631      	ADIW R30,1
000111 8bea      	STD  Y+18,R30
000112 8bfb      	STD  Y+18+1,R31
000113 9731      	SBIW R30,1
000114 91e4      	LPM  R30,Z
000115 2f3e      	MOV  R19,R30
000116 30e0      	CPI  R30,0
000117 f409      	BRNE PC+2
000118 c10b      	RJMP _0x200001E
000119 2fe0      	MOV  R30,R16
00011a 30e0      	CPI  R30,0
00011b f431      	BRNE _0x2000022
00011c 3235      	CPI  R19,37
00011d f411      	BRNE _0x2000023
00011e e001      	LDI  R16,LOW(1)
00011f c001      	RJMP _0x2000024
                 _0x2000023:
000120 d171      	RCALL SUBOPT_0x5
                 _0x2000024:
000121 c101      	RJMP _0x2000021
                 _0x2000022:
000122 30e1      	CPI  R30,LOW(0x1)
000123 f4a1      	BRNE _0x2000025
000124 3235      	CPI  R19,37
000125 f411      	BRNE _0x2000026
000126 d16b      	RCALL SUBOPT_0x5
000127 c0fa      	RJMP _0x20000D2
                 _0x2000026:
000128 e002      	LDI  R16,LOW(2)
000129 e050      	LDI  R21,LOW(0)
00012a e010      	LDI  R17,LOW(0)
00012b 323d      	CPI  R19,45
00012c f411      	BRNE _0x2000027
00012d e011      	LDI  R17,LOW(1)
00012e c0f4      	RJMP _0x2000021
                 _0x2000027:
00012f 323b      	CPI  R19,43
000130 f411      	BRNE _0x2000028
000131 e25b      	LDI  R21,LOW(43)
000132 c0f0      	RJMP _0x2000021
                 _0x2000028:
000133 3230      	CPI  R19,32
000134 f411      	BRNE _0x2000029
000135 e250      	LDI  R21,LOW(32)
000136 c0ec      	RJMP _0x2000021
                 _0x2000029:
000137 c002      	RJMP _0x200002A
                 _0x2000025:
000138 30e2      	CPI  R30,LOW(0x2)
000139 f439      	BRNE _0x200002B
                 _0x200002A:
00013a e040      	LDI  R20,LOW(0)
00013b e003      	LDI  R16,LOW(3)
00013c 3330      	CPI  R19,48
00013d f411      	BRNE _0x200002C
00013e 6810      	ORI  R17,LOW(128)
00013f c0e3      	RJMP _0x2000021
                 _0x200002C:
000140 c003      	RJMP _0x200002D
                 _0x200002B:
000141 30e3      	CPI  R30,LOW(0x3)
000142 f009      	BREQ PC+2
000143 c0df      	RJMP _0x2000021
                 _0x200002D:
000144 3330      	CPI  R19,48
000145 f010      	BRLO _0x2000030
000146 333a      	CPI  R19,58
000147 f008      	BRLO _0x2000031
                 _0x2000030:
000148 c007      	RJMP _0x200002F
                 _0x2000031:
000149 e0aa      	LDI  R26,LOW(10)
00014a 9f4a      	MUL  R20,R26
00014b 2d40      	MOV  R20,R0
00014c 2fe3      	MOV  R30,R19
00014d 53e0      	SUBI R30,LOW(48)
00014e 0f4e      	ADD  R20,R30
00014f c0d3      	RJMP _0x2000021
                 _0x200002F:
000150 2fe3      	MOV  R30,R19
000151 36e3      	CPI  R30,LOW(0x63)
000152 f439      	BRNE _0x2000035
000153 d145      	RCALL SUBOPT_0x6
000154 89e8      	LDD  R30,Y+16
000155 89f9      	LDD  R31,Y+16+1
000156 81a4      	LDD  R26,Z+4
000157 93aa      	ST   -Y,R26
000158 d146      	RCALL SUBOPT_0x7
000159 c0c8      	RJMP _0x2000036
                 _0x2000035:
00015a 37e3      	CPI  R30,LOW(0x73)
00015b f429      	BRNE _0x2000038
00015c d13c      	RCALL SUBOPT_0x6
00015d d147      	RCALL SUBOPT_0x8
00015e d0f3      	RCALL _strlen
00015f 2f0e      	MOV  R16,R30
000160 c007      	RJMP _0x2000039
                 _0x2000038:
000161 37e0      	CPI  R30,LOW(0x70)
000162 f449      	BRNE _0x200003B
000163 d135      	RCALL SUBOPT_0x6
000164 d140      	RCALL SUBOPT_0x8
000165 d0f8      	RCALL _strlenf
000166 2f0e      	MOV  R16,R30
000167 6018      	ORI  R17,LOW(8)
                 _0x2000039:
000168 6012      	ORI  R17,LOW(2)
000169 771f      	ANDI R17,LOW(127)
00016a e020      	LDI  R18,LOW(0)
00016b c03a      	RJMP _0x200003C
                 _0x200003B:
00016c 36e4      	CPI  R30,LOW(0x64)
00016d f011      	BREQ _0x200003F
00016e 36e9      	CPI  R30,LOW(0x69)
00016f f411      	BRNE _0x2000040
                 _0x200003F:
000170 6014      	ORI  R17,LOW(4)
000171 c002      	RJMP _0x2000041
                 _0x2000040:
000172 37e5      	CPI  R30,LOW(0x75)
000173 f431      	BRNE _0x2000042
                 _0x2000041:
000174 e6e8      	LDI  R30,LOW(_tbl10_G100*2)
000175 e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
000176 83ee      	STD  Y+6,R30
000177 83ff      	STD  Y+6+1,R31
000178 e005      	LDI  R16,LOW(5)
000179 c00c      	RJMP _0x2000043
                 _0x2000042:
00017a 35e8      	CPI  R30,LOW(0x58)
00017b f411      	BRNE _0x2000045
00017c 6018      	ORI  R17,LOW(8)
00017d c003      	RJMP _0x2000046
                 _0x2000045:
00017e 37e8      	CPI  R30,LOW(0x78)
00017f f009      	BREQ PC+2
000180 c0a1      	RJMP _0x2000077
                 _0x2000046:
000181 e7e2      	LDI  R30,LOW(_tbl16_G100*2)
000182 e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
000183 83ee      	STD  Y+6,R30
000184 83ff      	STD  Y+6+1,R31
000185 e004      	LDI  R16,LOW(4)
                 _0x2000043:
000186 ff12      	SBRS R17,2
000187 c015      	RJMP _0x2000048
000188 d110      	RCALL SUBOPT_0x6
000189 89a8      	LDD  R26,Y+16
00018a 89b9      	LDD  R27,Y+16+1
00018b 9614      	ADIW R26,4
00018c 91ed      	LD   R30,X+
00018d 91fd      	LD   R31,X+
00018e 87ea      	STD  Y+10,R30
00018f 87fb      	STD  Y+10+1,R31
000190 85ab      	LDD  R26,Y+11
000191 23aa      	TST  R26
000192 f422      	BRPL _0x2000049
000193 d129      	RCALL __ANEGW1
000194 87ea      	STD  Y+10,R30
000195 87fb      	STD  Y+10+1,R31
000196 e25d      	LDI  R21,LOW(45)
                 _0x2000049:
000197 3050      	CPI  R21,0
000198 f011      	BREQ _0x200004A
000199 5f0f      	SUBI R16,-LOW(1)
00019a c001      	RJMP _0x200004B
                 _0x200004A:
00019b 7f1b      	ANDI R17,LOW(251)
                 _0x200004B:
00019c c009      	RJMP _0x200004C
                 _0x2000048:
00019d d0fb      	RCALL SUBOPT_0x6
00019e 89a8      	LDD  R26,Y+16
00019f 89b9      	LDD  R27,Y+16+1
0001a0 9614      	ADIW R26,4
                +
0001a1 91ed     +LD R30 , X +
0001a2 91fc     +LD R31 , X
0001a3 9711     +SBIW R26 , 1
                 	__GETW1P
0001a4 87ea      	STD  Y+10,R30
0001a5 87fb      	STD  Y+10+1,R31
                 _0x200004C:
                 _0x200003C:
0001a6 fd10      	SBRC R17,0
0001a7 c010      	RJMP _0x200004D
                 _0x200004E:
0001a8 1704      	CP   R16,R20
0001a9 f470      	BRSH _0x2000050
0001aa ff17      	SBRS R17,7
0001ab c008      	RJMP _0x2000051
0001ac ff12      	SBRS R17,2
0001ad c004      	RJMP _0x2000052
0001ae 7f1b      	ANDI R17,LOW(251)
0001af 2f35      	MOV  R19,R21
0001b0 5001      	SUBI R16,LOW(1)
0001b1 c001      	RJMP _0x2000053
                 _0x2000052:
0001b2 e330      	LDI  R19,LOW(48)
                 _0x2000053:
0001b3 c001      	RJMP _0x2000054
                 _0x2000051:
0001b4 e230      	LDI  R19,LOW(32)
                 _0x2000054:
0001b5 d0dc      	RCALL SUBOPT_0x5
0001b6 5041      	SUBI R20,LOW(1)
0001b7 cff0      	RJMP _0x200004E
                 _0x2000050:
                 _0x200004D:
0001b8 2f20      	MOV  R18,R16
0001b9 ff11      	SBRS R17,1
0001ba c016      	RJMP _0x2000055
                 _0x2000056:
0001bb 3020      	CPI  R18,0
0001bc f099      	BREQ _0x2000058
0001bd ff13      	SBRS R17,3
0001be c006      	RJMP _0x2000059
0001bf 81ee      	LDD  R30,Y+6
0001c0 81ff      	LDD  R31,Y+6+1
0001c1 9135      	LPM  R19,Z+
0001c2 83ee      	STD  Y+6,R30
0001c3 83ff      	STD  Y+6+1,R31
0001c4 c005      	RJMP _0x200005A
                 _0x2000059:
0001c5 81ae      	LDD  R26,Y+6
0001c6 81bf      	LDD  R27,Y+6+1
0001c7 913d      	LD   R19,X+
0001c8 83ae      	STD  Y+6,R26
0001c9 83bf      	STD  Y+6+1,R27
                 _0x200005A:
0001ca d0c7      	RCALL SUBOPT_0x5
0001cb 3040      	CPI  R20,0
0001cc f009      	BREQ _0x200005B
0001cd 5041      	SUBI R20,LOW(1)
                 _0x200005B:
0001ce 5021      	SUBI R18,LOW(1)
0001cf cfeb      	RJMP _0x2000056
                 _0x2000058:
0001d0 c048      	RJMP _0x200005C
                 _0x2000055:
                 _0x200005E:
0001d1 e330      	LDI  R19,LOW(48)
0001d2 81ee      	LDD  R30,Y+6
0001d3 81ff      	LDD  R31,Y+6+1
0001d4 d0f4      	RCALL __GETW1PF
0001d5 87e8      	STD  Y+8,R30
0001d6 87f9      	STD  Y+8+1,R31
0001d7 81ee      	LDD  R30,Y+6
0001d8 81ff      	LDD  R31,Y+6+1
0001d9 9632      	ADIW R30,2
0001da 83ee      	STD  Y+6,R30
0001db 83ff      	STD  Y+6+1,R31
                 _0x2000060:
0001dc 85e8      	LDD  R30,Y+8
0001dd 85f9      	LDD  R31,Y+8+1
0001de 85aa      	LDD  R26,Y+10
0001df 85bb      	LDD  R27,Y+10+1
0001e0 17ae      	CP   R26,R30
0001e1 07bf      	CPC  R27,R31
0001e2 f050      	BRLO _0x2000062
0001e3 5f3f      	SUBI R19,-LOW(1)
0001e4 85a8      	LDD  R26,Y+8
0001e5 85b9      	LDD  R27,Y+8+1
0001e6 85ea      	LDD  R30,Y+10
0001e7 85fb      	LDD  R31,Y+10+1
0001e8 1bea      	SUB  R30,R26
0001e9 0bfb      	SBC  R31,R27
0001ea 87ea      	STD  Y+10,R30
0001eb 87fb      	STD  Y+10+1,R31
0001ec cfef      	RJMP _0x2000060
                 _0x2000062:
0001ed 333a      	CPI  R19,58
0001ee f028      	BRLO _0x2000063
0001ef ff13      	SBRS R17,3
0001f0 c002      	RJMP _0x2000064
0001f1 5f39      	SUBI R19,-LOW(7)
0001f2 c001      	RJMP _0x2000065
                 _0x2000064:
0001f3 5d39      	SUBI R19,-LOW(39)
                 _0x2000065:
                 _0x2000063:
0001f4 fd14      	SBRC R17,4
0001f5 c019      	RJMP _0x2000067
0001f6 3331      	CPI  R19,49
0001f7 f420      	BRSH _0x2000069
0001f8 85a8      	LDD  R26,Y+8
0001f9 85b9      	LDD  R27,Y+8+1
0001fa 9711      	SBIW R26,1
0001fb f409      	BRNE _0x2000068
                 _0x2000069:
0001fc c009      	RJMP _0x20000D3
                 _0x2000068:
0001fd 1742      	CP   R20,R18
0001fe f010      	BRLO _0x200006D
0001ff ff10      	SBRS R17,0
000200 c001      	RJMP _0x200006E
                 _0x200006D:
000201 c011      	RJMP _0x200006C
                 _0x200006E:
000202 e230      	LDI  R19,LOW(32)
000203 ff17      	SBRS R17,7
000204 c00a      	RJMP _0x200006F
000205 e330      	LDI  R19,LOW(48)
                 _0x20000D3:
000206 6110      	ORI  R17,LOW(16)
000207 ff12      	SBRS R17,2
000208 c006      	RJMP _0x2000070
000209 7f1b      	ANDI R17,LOW(251)
00020a 935a      	ST   -Y,R21
00020b d093      	RCALL SUBOPT_0x7
00020c 3040      	CPI  R20,0
00020d f009      	BREQ _0x2000071
00020e 5041      	SUBI R20,LOW(1)
                 _0x2000071:
                 _0x2000070:
                 _0x200006F:
                 _0x2000067:
00020f d082      	RCALL SUBOPT_0x5
000210 3040      	CPI  R20,0
000211 f009      	BREQ _0x2000072
000212 5041      	SUBI R20,LOW(1)
                 _0x2000072:
                 _0x200006C:
000213 5021      	SUBI R18,LOW(1)
000214 85a8      	LDD  R26,Y+8
000215 85b9      	LDD  R27,Y+8+1
000216 9712      	SBIW R26,2
000217 f008      	BRLO _0x200005F
000218 cfb8      	RJMP _0x200005E
                 _0x200005F:
                 _0x200005C:
000219 ff10      	SBRS R17,0
00021a c007      	RJMP _0x2000073
                 _0x2000074:
00021b 3040      	CPI  R20,0
00021c f029      	BREQ _0x2000076
00021d 5041      	SUBI R20,LOW(1)
00021e e2e0      	LDI  R30,LOW(32)
00021f 93ea      	ST   -Y,R30
000220 d07e      	RCALL SUBOPT_0x7
000221 cff9      	RJMP _0x2000074
                 _0x2000076:
                 _0x2000073:
                 _0x2000077:
                 _0x2000036:
                 _0x20000D2:
000222 e000      	LDI  R16,LOW(0)
                 _0x2000021:
000223 ceea      	RJMP _0x200001C
                 _0x200001E:
000224 85ac      	LDD  R26,Y+12
000225 85bd      	LDD  R27,Y+12+1
000226 91ed      	LD   R30,X+
000227 91fd      	LD   R31,X+
000228 d08d      	RCALL __LOADLOCR6
000229 9664      	ADIW R28,20
00022a 9508      	RET
                 ; .FEND
                 _printf:
                 ; .FSTART _printf
00022b 92ff      	PUSH R15
00022c 2ef8      	MOV  R15,R24
00022d 9726      	SBIW R28,6
00022e 931a      	ST   -Y,R17
00022f 930a      	ST   -Y,R16
000230 01de      	MOVW R26,R28
000231 9614      	ADIW R26,4
                +
000232 2400     +CLR R0
000233 0daf     +ADD R26 , R15
000234 1db0     +ADC R27 , R0
                 	__ADDW2R15
000235 018d      	MOVW R16,R26
000236 e0e0      	LDI  R30,LOW(0)
000237 83ec      	STD  Y+4,R30
000238 83ed      	STD  Y+4+1,R30
000239 83ee      	STD  Y+6,R30
00023a 83ef      	STD  Y+6+1,R30
00023b 01de      	MOVW R26,R28
00023c 9618      	ADIW R26,8
                +
00023d 2400     +CLR R0
00023e 0daf     +ADD R26 , R15
00023f 1db0     +ADC R27 , R0
                 	__ADDW2R15
000240 91ed      	LD   R30,X+
000241 91fd      	LD   R31,X+
000242 93fa      	ST   -Y,R31
000243 93ea      	ST   -Y,R30
000244 931a      	ST   -Y,R17
000245 930a      	ST   -Y,R16
000246 efe5      	LDI  R30,LOW(_put_usart_G100)
000247 e0f0      	LDI  R31,HIGH(_put_usart_G100)
000248 93fa      	ST   -Y,R31
000249 93ea      	ST   -Y,R30
00024a 01de      	MOVW R26,R28
00024b 9618      	ADIW R26,8
00024c deb6      	RCALL __print_G100
00024d 8119      	LDD  R17,Y+1
00024e 8108      	LDD  R16,Y+0
00024f 9628      	ADIW R28,8
000250 90ff      	POP  R15
000251 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
000252 93ba      	ST   -Y,R27
000253 93aa      	ST   -Y,R26
000254 91a9          ld   r26,y+
000255 91b9          ld   r27,y+
000256 27ee          clr  r30
000257 27ff          clr  r31
                 strlen0:
000258 916d          ld   r22,x+
000259 2366          tst  r22
00025a f011          breq strlen1
00025b 9631          adiw r30,1
00025c cffb          rjmp strlen0
                 strlen1:
00025d 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
00025e 93ba      	ST   -Y,R27
00025f 93aa      	ST   -Y,R26
000260 27aa          clr  r26
000261 27bb          clr  r27
000262 91e9          ld   r30,y+
000263 91f9          ld   r31,y+
                 strlenf0:
000264 9005      	lpm  r0,z+
000265 2000          tst  r0
000266 f011          breq strlenf1
000267 9611          adiw r26,1
000268 cffb          rjmp strlenf0
                 strlenf1:
000269 01fd          movw r30,r26
00026a 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _volt:
000300           	.BYTE 0x4
                 _voltDigital:
000304           	.BYTE 0x2
                 _voltEnt:
000306           	.BYTE 0x1
                 _voltDec:
000307           	.BYTE 0x1
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x0:
00026b 93e0 0300 	STS  _volt,R30
00026d 93f0 0301 	STS  _volt+1,R31
00026f 9360 0302 	STS  _volt+2,R22
000271 9370 0303 	STS  _volt+3,R23
000273 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1:
000274 91e0 0300 	LDS  R30,_volt
000276 91f0 0301 	LDS  R31,_volt+1
000278 9160 0302 	LDS  R22,_volt+2
00027a 9170 0303 	LDS  R23,_volt+3
00027c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x2:
00027d 91a0 0300 	LDS  R26,_volt
00027f 91b0 0301 	LDS  R27,_volt+1
000281 9180 0302 	LDS  R24,_volt+2
000283 9190 0303 	LDS  R25,_volt+3
000285 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
000286 dfe4      	RCALL SUBOPT_0x0
000287 dff5      	RCALL SUBOPT_0x2
                +
000288 e0e0     +LDI R30 , LOW ( 0x41200000 )
000289 e0f0     +LDI R31 , HIGH ( 0x41200000 )
00028a e260     +LDI R22 , BYTE3 ( 0x41200000 )
00028b e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
00028c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
00028d 27ff      	CLR  R31
00028e 2766      	CLR  R22
00028f 2777      	CLR  R23
000290 d03c      	RCALL __PUTPARD1
000291 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x5:
000292 933a      	ST   -Y,R19
000293 85ad      	LDD  R26,Y+13
000294 85be      	LDD  R27,Y+13+1
000295 85ef      	LDD  R30,Y+15
000296 89f8      	LDD  R31,Y+15+1
000297 9509      	ICALL
000298 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x6:
000299 89e8      	LDD  R30,Y+16
00029a 89f9      	LDD  R31,Y+16+1
00029b 9734      	SBIW R30,4
00029c 8be8      	STD  Y+16,R30
00029d 8bf9      	STD  Y+16+1,R31
00029e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x7:
00029f 85ad      	LDD  R26,Y+13
0002a0 85be      	LDD  R27,Y+13+1
0002a1 85ef      	LDD  R30,Y+15
0002a2 89f8      	LDD  R31,Y+15+1
0002a3 9509      	ICALL
0002a4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x8:
0002a5 89a8      	LDD  R26,Y+16
0002a6 89b9      	LDD  R27,Y+16+1
0002a7 9614      	ADIW R26,4
0002a8 91ed      	LD   R30,X+
0002a9 91fd      	LD   R31,X+
0002aa 83ee      	STD  Y+6,R30
0002ab 83ff      	STD  Y+6+1,R31
0002ac 81ae      	LDD  R26,Y+6
0002ad 81bf      	LDD  R27,Y+6+1
0002ae 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
0002af 935a      	ST   -Y,R21
                 __SAVELOCR5:
0002b0 934a      	ST   -Y,R20
                 __SAVELOCR4:
0002b1 933a      	ST   -Y,R19
                 __SAVELOCR3:
0002b2 932a      	ST   -Y,R18
                 __SAVELOCR2:
0002b3 931a      	ST   -Y,R17
0002b4 930a      	ST   -Y,R16
0002b5 9508      	RET
                 
                 __LOADLOCR6:
0002b6 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0002b7 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0002b8 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0002b9 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0002ba 8119      	LDD  R17,Y+1
0002bb 8108      	LD   R16,Y
0002bc 9508      	RET
                 
                 __ANEGW1:
0002bd 95f1      	NEG  R31
0002be 95e1      	NEG  R30
0002bf 40f0      	SBCI R31,0
0002c0 9508      	RET
                 
                 __ANEGD1:
0002c1 95f0      	COM  R31
0002c2 9560      	COM  R22
0002c3 9570      	COM  R23
0002c4 95e1      	NEG  R30
0002c5 4fff      	SBCI R31,-1
0002c6 4f6f      	SBCI R22,-1
0002c7 4f7f      	SBCI R23,-1
0002c8 9508      	RET
                 
                 __GETW1PF:
0002c9 9005      	LPM  R0,Z+
0002ca 91f4      	LPM  R31,Z
0002cb 2de0      	MOV  R30,R0
0002cc 9508      	RET
                 
                 __PUTPARD1:
0002cd 937a      	ST   -Y,R23
0002ce 936a      	ST   -Y,R22
0002cf 93fa      	ST   -Y,R31
0002d0 93ea      	ST   -Y,R30
0002d1 9508      	RET
                 
                 __SWAPD12:
0002d2 2e18      	MOV  R1,R24
0002d3 2f86      	MOV  R24,R22
0002d4 2d61      	MOV  R22,R1
0002d5 2e19      	MOV  R1,R25
0002d6 2f97      	MOV  R25,R23
0002d7 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
0002d8 2e1b      	MOV  R1,R27
0002d9 2fbf      	MOV  R27,R31
0002da 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
0002db 2e1a      	MOV  R1,R26
0002dc 2fae      	MOV  R26,R30
0002dd 2de1      	MOV  R30,R1
0002de 9508      	RET
                 
                 __ROUND_REPACK:
0002df 2355      	TST  R21
0002e0 f442      	BRPL __REPACK
0002e1 3850      	CPI  R21,0x80
0002e2 f411      	BRNE __ROUND_REPACK0
0002e3 ffe0      	SBRS R30,0
0002e4 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
0002e5 9631      	ADIW R30,1
0002e6 1f69      	ADC  R22,R25
0002e7 1f79      	ADC  R23,R25
0002e8 f06b      	BRVS __REPACK1
                 
                 __REPACK:
0002e9 e850      	LDI  R21,0x80
0002ea 2757      	EOR  R21,R23
0002eb f411      	BRNE __REPACK0
0002ec 935f      	PUSH R21
0002ed c0cf      	RJMP __ZERORES
                 __REPACK0:
0002ee 3f5f      	CPI  R21,0xFF
0002ef f031      	BREQ __REPACK1
0002f0 0f66      	LSL  R22
0002f1 0c00      	LSL  R0
0002f2 9557      	ROR  R21
0002f3 9567      	ROR  R22
0002f4 2f75      	MOV  R23,R21
0002f5 9508      	RET
                 __REPACK1:
0002f6 935f      	PUSH R21
0002f7 2000      	TST  R0
0002f8 f00a      	BRMI __REPACK2
0002f9 c0ce      	RJMP __MAXRES
                 __REPACK2:
0002fa c0c7      	RJMP __MINRES
                 
                 __UNPACK:
0002fb e850      	LDI  R21,0x80
0002fc 2e19      	MOV  R1,R25
0002fd 2215      	AND  R1,R21
0002fe 0f88      	LSL  R24
0002ff 1f99      	ROL  R25
000300 2795      	EOR  R25,R21
000301 0f55      	LSL  R21
000302 9587      	ROR  R24
                 
                 __UNPACK1:
000303 e850      	LDI  R21,0x80
000304 2e07      	MOV  R0,R23
000305 2205      	AND  R0,R21
000306 0f66      	LSL  R22
000307 1f77      	ROL  R23
000308 2775      	EOR  R23,R21
000309 0f55      	LSL  R21
00030a 9567      	ROR  R22
00030b 9508      	RET
                 
                 __CFD1U:
00030c 9468      	SET
00030d c001      	RJMP __CFD1U0
                 __CFD1:
00030e 94e8      	CLT
                 __CFD1U0:
00030f 935f      	PUSH R21
000310 dff2      	RCALL __UNPACK1
000311 3870      	CPI  R23,0x80
000312 f018      	BRLO __CFD10
000313 3f7f      	CPI  R23,0xFF
000314 f408      	BRCC __CFD10
000315 c0a7      	RJMP __ZERORES
                 __CFD10:
000316 e156      	LDI  R21,22
000317 1b57      	SUB  R21,R23
000318 f4aa      	BRPL __CFD11
000319 9551      	NEG  R21
00031a 3058      	CPI  R21,8
00031b f40e      	BRTC __CFD19
00031c 3059      	CPI  R21,9
                 __CFD19:
00031d f030      	BRLO __CFD17
00031e efef      	SER  R30
00031f efff      	SER  R31
000320 ef6f      	SER  R22
000321 e77f      	LDI  R23,0x7F
000322 f977      	BLD  R23,7
000323 c01a      	RJMP __CFD15
                 __CFD17:
000324 2777      	CLR  R23
000325 2355      	TST  R21
000326 f0b9      	BREQ __CFD15
                 __CFD18:
000327 0fee      	LSL  R30
000328 1fff      	ROL  R31
000329 1f66      	ROL  R22
00032a 1f77      	ROL  R23
00032b 955a      	DEC  R21
00032c f7d1      	BRNE __CFD18
00032d c010      	RJMP __CFD15
                 __CFD11:
00032e 2777      	CLR  R23
                 __CFD12:
00032f 3058      	CPI  R21,8
000330 f028      	BRLO __CFD13
000331 2fef      	MOV  R30,R31
000332 2ff6      	MOV  R31,R22
000333 2f67      	MOV  R22,R23
000334 5058      	SUBI R21,8
000335 cff9      	RJMP __CFD12
                 __CFD13:
000336 2355      	TST  R21
000337 f031      	BREQ __CFD15
                 __CFD14:
000338 9576      	LSR  R23
000339 9567      	ROR  R22
00033a 95f7      	ROR  R31
00033b 95e7      	ROR  R30
00033c 955a      	DEC  R21
00033d f7d1      	BRNE __CFD14
                 __CFD15:
00033e 2000      	TST  R0
00033f f40a      	BRPL __CFD16
000340 df80      	RCALL __ANEGD1
                 __CFD16:
000341 915f      	POP  R21
000342 9508      	RET
                 
                 __CDF1U:
000343 9468      	SET
000344 c001      	RJMP __CDF1U0
                 __CDF1:
000345 94e8      	CLT
                 __CDF1U0:
000346 9730      	SBIW R30,0
000347 4060      	SBCI R22,0
000348 4070      	SBCI R23,0
000349 f0b1      	BREQ __CDF10
00034a 2400      	CLR  R0
00034b f026      	BRTS __CDF11
00034c 2377      	TST  R23
00034d f412      	BRPL __CDF11
00034e 9400      	COM  R0
00034f df71      	RCALL __ANEGD1
                 __CDF11:
000350 2e17      	MOV  R1,R23
000351 e17e      	LDI  R23,30
000352 2011      	TST  R1
                 __CDF12:
000353 f032      	BRMI __CDF13
000354 957a      	DEC  R23
000355 0fee      	LSL  R30
000356 1fff      	ROL  R31
000357 1f66      	ROL  R22
000358 1c11      	ROL  R1
000359 cff9      	RJMP __CDF12
                 __CDF13:
00035a 2fef      	MOV  R30,R31
00035b 2ff6      	MOV  R31,R22
00035c 2d61      	MOV  R22,R1
00035d 935f      	PUSH R21
00035e df8a      	RCALL __REPACK
00035f 915f      	POP  R21
                 __CDF10:
000360 9508      	RET
                 
                 __SWAPACC:
000361 934f      	PUSH R20
000362 01af      	MOVW R20,R30
000363 01fd      	MOVW R30,R26
000364 01da      	MOVW R26,R20
000365 01ab      	MOVW R20,R22
000366 01bc      	MOVW R22,R24
000367 01ca      	MOVW R24,R20
000368 2d40      	MOV  R20,R0
000369 2c01      	MOV  R0,R1
00036a 2e14      	MOV  R1,R20
00036b 914f      	POP  R20
00036c 9508      	RET
                 
                 __UADD12:
00036d 0fea      	ADD  R30,R26
00036e 1ffb      	ADC  R31,R27
00036f 1f68      	ADC  R22,R24
000370 9508      	RET
                 
                 __NEGMAN1:
000371 95e0      	COM  R30
000372 95f0      	COM  R31
000373 9560      	COM  R22
000374 5fef      	SUBI R30,-1
000375 4fff      	SBCI R31,-1
000376 4f6f      	SBCI R22,-1
000377 9508      	RET
                 
                 __SUBF12:
000378 935f      	PUSH R21
000379 df81      	RCALL __UNPACK
00037a 3890      	CPI  R25,0x80
00037b f171      	BREQ __ADDF129
00037c e850      	LDI  R21,0x80
00037d 2615      	EOR  R1,R21
                 
00037e c004      	RJMP __ADDF120
                 
                 __ADDF12:
00037f 935f      	PUSH R21
000380 df7a      	RCALL __UNPACK
000381 3890      	CPI  R25,0x80
000382 f139      	BREQ __ADDF129
                 
                 __ADDF120:
000383 3870      	CPI  R23,0x80
000384 f121      	BREQ __ADDF128
                 __ADDF121:
000385 2f57      	MOV  R21,R23
000386 1b59      	SUB  R21,R25
000387 f12b      	BRVS __ADDF1211
000388 f412      	BRPL __ADDF122
000389 dfd7      	RCALL __SWAPACC
00038a cffa      	RJMP __ADDF121
                 __ADDF122:
00038b 3158      	CPI  R21,24
00038c f018      	BRLO __ADDF123
00038d 27aa      	CLR  R26
00038e 27bb      	CLR  R27
00038f 2788      	CLR  R24
                 __ADDF123:
000390 3058      	CPI  R21,8
000391 f028      	BRLO __ADDF124
000392 2fab      	MOV  R26,R27
000393 2fb8      	MOV  R27,R24
000394 2788      	CLR  R24
000395 5058      	SUBI R21,8
000396 cff9      	RJMP __ADDF123
                 __ADDF124:
000397 2355      	TST  R21
000398 f029      	BREQ __ADDF126
                 __ADDF125:
000399 9586      	LSR  R24
00039a 95b7      	ROR  R27
00039b 95a7      	ROR  R26
00039c 955a      	DEC  R21
00039d f7d9      	BRNE __ADDF125
                 __ADDF126:
00039e 2d50      	MOV  R21,R0
00039f 2551      	EOR  R21,R1
0003a0 f072      	BRMI __ADDF127
0003a1 dfcb      	RCALL __UADD12
0003a2 f438      	BRCC __ADDF129
0003a3 9567      	ROR  R22
0003a4 95f7      	ROR  R31
0003a5 95e7      	ROR  R30
0003a6 9573      	INC  R23
0003a7 f413      	BRVC __ADDF129
0003a8 c01f      	RJMP __MAXRES
                 __ADDF128:
0003a9 dfb7      	RCALL __SWAPACC
                 __ADDF129:
0003aa df3e      	RCALL __REPACK
0003ab 915f      	POP  R21
0003ac 9508      	RET
                 __ADDF1211:
0003ad f7d8      	BRCC __ADDF128
0003ae cffb      	RJMP __ADDF129
                 __ADDF127:
0003af 1bea      	SUB  R30,R26
0003b0 0bfb      	SBC  R31,R27
0003b1 0b68      	SBC  R22,R24
0003b2 f051      	BREQ __ZERORES
0003b3 f410      	BRCC __ADDF1210
0003b4 9400      	COM  R0
0003b5 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
0003b6 2366      	TST  R22
0003b7 f392      	BRMI __ADDF129
0003b8 0fee      	LSL  R30
0003b9 1fff      	ROL  R31
0003ba 1f66      	ROL  R22
0003bb 957a      	DEC  R23
0003bc f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
0003bd 27ee      	CLR  R30
0003be 27ff      	CLR  R31
0003bf 01bf      	MOVW R22,R30
0003c0 915f      	POP  R21
0003c1 9508      	RET
                 
                 __MINRES:
0003c2 efef      	SER  R30
0003c3 efff      	SER  R31
0003c4 e76f      	LDI  R22,0x7F
0003c5 ef7f      	SER  R23
0003c6 915f      	POP  R21
0003c7 9508      	RET
                 
                 __MAXRES:
0003c8 efef      	SER  R30
0003c9 efff      	SER  R31
0003ca e76f      	LDI  R22,0x7F
0003cb e77f      	LDI  R23,0x7F
0003cc 915f      	POP  R21
0003cd 9508      	RET
                 
                 __MULF12:
0003ce 935f      	PUSH R21
0003cf df2b      	RCALL __UNPACK
0003d0 3870      	CPI  R23,0x80
0003d1 f359      	BREQ __ZERORES
0003d2 3890      	CPI  R25,0x80
0003d3 f349      	BREQ __ZERORES
0003d4 2401      	EOR  R0,R1
0003d5 9408      	SEC
0003d6 1f79      	ADC  R23,R25
0003d7 f423      	BRVC __MULF124
0003d8 f324      	BRLT __ZERORES
                 __MULF125:
0003d9 2000      	TST  R0
0003da f33a      	BRMI __MINRES
0003db cfec      	RJMP __MAXRES
                 __MULF124:
0003dc 920f      	PUSH R0
0003dd 931f      	PUSH R17
0003de 932f      	PUSH R18
0003df 933f      	PUSH R19
0003e0 934f      	PUSH R20
0003e1 2711      	CLR  R17
0003e2 2722      	CLR  R18
0003e3 2799      	CLR  R25
0003e4 9f68      	MUL  R22,R24
0003e5 01a0      	MOVW R20,R0
0003e6 9f8f      	MUL  R24,R31
0003e7 2d30      	MOV  R19,R0
0003e8 0d41      	ADD  R20,R1
0003e9 1f59      	ADC  R21,R25
0003ea 9f6b      	MUL  R22,R27
0003eb 0d30      	ADD  R19,R0
0003ec 1d41      	ADC  R20,R1
0003ed 1f59      	ADC  R21,R25
0003ee 9f8e      	MUL  R24,R30
0003ef d027      	RCALL __MULF126
0003f0 9fbf      	MUL  R27,R31
0003f1 d025      	RCALL __MULF126
0003f2 9f6a      	MUL  R22,R26
0003f3 d023      	RCALL __MULF126
0003f4 9fbe      	MUL  R27,R30
0003f5 d01d      	RCALL __MULF127
0003f6 9faf      	MUL  R26,R31
0003f7 d01b      	RCALL __MULF127
0003f8 9fae      	MUL  R26,R30
0003f9 0d11      	ADD  R17,R1
0003fa 1f29      	ADC  R18,R25
0003fb 1f39      	ADC  R19,R25
0003fc 1f49      	ADC  R20,R25
0003fd 1f59      	ADC  R21,R25
0003fe 2fe3      	MOV  R30,R19
0003ff 2ff4      	MOV  R31,R20
000400 2f65      	MOV  R22,R21
000401 2f52      	MOV  R21,R18
000402 914f      	POP  R20
000403 913f      	POP  R19
000404 912f      	POP  R18
000405 911f      	POP  R17
000406 900f      	POP  R0
000407 2366      	TST  R22
000408 f02a      	BRMI __MULF122
000409 0f55      	LSL  R21
00040a 1fee      	ROL  R30
00040b 1fff      	ROL  R31
00040c 1f66      	ROL  R22
00040d c002      	RJMP __MULF123
                 __MULF122:
00040e 9573      	INC  R23
00040f f24b      	BRVS __MULF125
                 __MULF123:
000410 dece      	RCALL __ROUND_REPACK
000411 915f      	POP  R21
000412 9508      	RET
                 
                 __MULF127:
000413 0d10      	ADD  R17,R0
000414 1d21      	ADC  R18,R1
000415 1f39      	ADC  R19,R25
000416 c002      	RJMP __MULF128
                 __MULF126:
000417 0d20      	ADD  R18,R0
000418 1d31      	ADC  R19,R1
                 __MULF128:
000419 1f49      	ADC  R20,R25
00041a 1f59      	ADC  R21,R25
00041b 9508      	RET
                 
                 __DIVF21:
00041c 935f      	PUSH R21
00041d dedd      	RCALL __UNPACK
00041e 3870      	CPI  R23,0x80
00041f f421      	BRNE __DIVF210
000420 2011      	TST  R1
                 __DIVF211:
000421 f40a      	BRPL __DIVF219
000422 cf9f      	RJMP __MINRES
                 __DIVF219:
000423 cfa4      	RJMP __MAXRES
                 __DIVF210:
000424 3890      	CPI  R25,0x80
000425 f409      	BRNE __DIVF218
                 __DIVF217:
000426 cf96      	RJMP __ZERORES
                 __DIVF218:
000427 2401      	EOR  R0,R1
000428 9408      	SEC
000429 0b97      	SBC  R25,R23
00042a f41b      	BRVC __DIVF216
00042b f3d4      	BRLT __DIVF217
00042c 2000      	TST  R0
00042d cff3      	RJMP __DIVF211
                 __DIVF216:
00042e 2f79      	MOV  R23,R25
00042f 931f      	PUSH R17
000430 932f      	PUSH R18
000431 933f      	PUSH R19
000432 934f      	PUSH R20
000433 2411      	CLR  R1
000434 2711      	CLR  R17
000435 2722      	CLR  R18
000436 2733      	CLR  R19
000437 01a9      	MOVW R20,R18
000438 e290      	LDI  R25,32
                 __DIVF212:
000439 17ae      	CP   R26,R30
00043a 07bf      	CPC  R27,R31
00043b 0786      	CPC  R24,R22
00043c 0741      	CPC  R20,R17
00043d f030      	BRLO __DIVF213
00043e 1bae      	SUB  R26,R30
00043f 0bbf      	SBC  R27,R31
000440 0b86      	SBC  R24,R22
000441 0b41      	SBC  R20,R17
000442 9408      	SEC
000443 c001      	RJMP __DIVF214
                 __DIVF213:
000444 9488      	CLC
                 __DIVF214:
000445 1f55      	ROL  R21
000446 1f22      	ROL  R18
000447 1f33      	ROL  R19
000448 1c11      	ROL  R1
000449 1faa      	ROL  R26
00044a 1fbb      	ROL  R27
00044b 1f88      	ROL  R24
00044c 1f44      	ROL  R20
00044d 959a      	DEC  R25
00044e f751      	BRNE __DIVF212
00044f 01f9      	MOVW R30,R18
000450 2d61      	MOV  R22,R1
000451 914f      	POP  R20
000452 913f      	POP  R19
000453 912f      	POP  R18
000454 911f      	POP  R17
000455 2366      	TST  R22
000456 f032      	BRMI __DIVF215
000457 0f55      	LSL  R21
000458 1fee      	ROL  R30
000459 1fff      	ROL  R31
00045a 1f66      	ROL  R22
00045b 957a      	DEC  R23
00045c f24b      	BRVS __DIVF217
                 __DIVF215:
00045d de81      	RCALL __ROUND_REPACK
00045e 915f      	POP  R21
00045f 9508      	RET
                 
                 __CMPF12:
000460 2399      	TST  R25
000461 f09a      	BRMI __CMPF120
000462 2377      	TST  R23
000463 f042      	BRMI __CMPF121
000464 1797      	CP   R25,R23
000465 f048      	BRLO __CMPF122
000466 f429      	BRNE __CMPF121
000467 17ae      	CP   R26,R30
000468 07bf      	CPC  R27,R31
000469 0786      	CPC  R24,R22
00046a f020      	BRLO __CMPF122
00046b f031      	BREQ __CMPF123
                 __CMPF121:
00046c 9498      	CLZ
00046d 9488      	CLC
00046e 9508      	RET
                 __CMPF122:
00046f 9498      	CLZ
000470 9408      	SEC
000471 9508      	RET
                 __CMPF123:
000472 9418      	SEZ
000473 9488      	CLC
000474 9508      	RET
                 __CMPF120:
000475 2377      	TST  R23
000476 f7c2      	BRPL __CMPF122
000477 1797      	CP   R25,R23
000478 f398      	BRLO __CMPF121
000479 f7a9      	BRNE __CMPF122
00047a 17ea      	CP   R30,R26
00047b 07fb      	CPC  R31,R27
00047c 0768      	CPC  R22,R24
00047d f388      	BRLO __CMPF122
00047e f399      	BREQ __CMPF123
00047f cfec      	RJMP __CMPF121
                 
                 _delay_ms:
000480 9610      	adiw r26,0
000481 f039      	breq __delay_ms1
                 __delay_ms0:
000482 95a8      	wdr
                +
000483 ef8a     +LDI R24 , LOW ( 0xFA )
000484 e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
000485 9701     +SBIW R24 , 1
000486 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
000487 9711      	sbiw r26,1
000488 f7c9      	brne __delay_ms0
                 __delay_ms1:
000489 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega328P register use summary:
r0 :  31 r1 :  29 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   5 
r16:  29 r17:  39 r18:  23 r19:  39 r20:  39 r21:  71 r22:  60 r23:  51 
r24:  34 r25:  35 r26:  78 r27:  47 r28:  10 r29:   1 r30: 174 r31:  89 
x  :  22 y  : 123 z  :   6 
Registers used: 22 out of 35 (62.9%)

ATmega328P instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  19 add   :  10 
adiw  :  17 and   :   2 andi  :   6 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   4 brcs  :   0 break :   0 breq  :  27 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  16 
brlt  :   2 brmi  :   9 brne  :  32 brpl  :   8 brsh  :   3 brtc  :   1 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   0 call  :   0 
cbi   :   0 cbr   :   0 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  29 cls   :   0 clt   :   2 clv   :   0 clz   :   2 com   :   8 
cp    :   8 cpc   :   8 cpi   :  45 cpse  :   0 dec   :   9 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   0 inc   :   2 jmp   :  27 ld    :  20 ldd   :  56 ldi   :  97 
lds   :  18 lpm   :   7 lsl   :  11 lsr   :   2 mov   :  53 movw  :  19 
mul   :  10 muls  :   0 mulsu :   0 neg   :   4 nop   :   0 or    :   0 
ori   :   9 out   :   6 pop   :  19 push  :  19 rcall :  73 ret   :  40 
reti  :   0 rjmp  :  78 rol   :  24 ror   :  12 sbc   :   8 sbci  :   8 
sbi   :   0 sbic  :   0 sbis  :   0 sbiw  :  11 sbr   :   0 sbrc  :   2 
sbrs  :  11 sec   :   4 seh   :   0 sei   :   0 sen   :   0 ser   :   8 
ses   :   0 set   :   2 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    :  40 std   :  30 sts   :  20 sub   :   5 subi  :  17 swap  :   0 
tst   :  20 wdr   :   1 
Instructions used: 68 out of 116 (58.6%)

ATmega328P memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000914   2294     30   2324   32768   7.1%
[.dseg] 0x000100 0x000308      0      8      8    2048   0.4%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 0 warnings
